{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Downloads/crm%20%282%29/crm/app/customer/list/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FaEye, FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport Link from \"next/link\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\n\r\ntype Customer = {\r\n  customer_id: number;\r\n  customer_name: string;\r\n  customer_short_name: string;\r\n  customer_contact_person: string;\r\n  customer_address: string;\r\n  customer_mail_id: string;\r\n  customer_contact_number: string;\r\n  customer_gst_num: string;\r\n  customer_country: string;\r\n  customer_active: number;\r\n};\r\n\r\nexport default function CustomerList() {\r\n  const [customers, setCustomers] = useState<Customer[]>([]);\r\n  const [filtered, setFiltered] = useState<Customer[]>([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchCustomers() {\r\n      try {\r\n        const res = await fetch(\"/api/customer/list\");\r\n        if (!res.ok) throw new Error(\"Failed to fetch customers\");\r\n        const data = await res.json();\r\n        setCustomers(data.customers);\r\n        setFiltered(data.customers);\r\n      } catch (err) {\r\n        setError((err as Error).message);\r\n      }\r\n    }\r\n\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filteredData = customers.filter((c) =>\r\n      `${c.customer_name} ${c.customer_contact_person} ${c.customer_mail_id}`\r\n        .toLowerCase()\r\n        .includes(search.toLowerCase())\r\n    );\r\n    setFiltered(filteredData);\r\n  }, [search, customers]);\r\n\r\n  const handleDelete = async (customer: Customer) => {\r\n    const confirmDelete = confirm(`Are you sure you want to delete ${customer.customer_name}?`);\r\n    if (!confirmDelete) return;\r\n\r\n    try {\r\n      const res = await fetch(`/api/customer/${customer.customer_id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      const result = await res.json();\r\n\r\n      if (res.ok) {\r\n        alert(\"Customer deleted successfully\");\r\n        setCustomers(prev => prev.filter(c => c.customer_id !== customer.customer_id));\r\n      } else {\r\n        alert(result.message || \"Failed to delete customer\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Delete error:\", err);\r\n      alert(\"Error deleting customer\");\r\n    }\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(filtered);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Customers\");\r\n    const excelBuffer = XLSX.write(workbook, { bookType: \"xlsx\", type: \"array\" });\r\n    const blob = new Blob([excelBuffer], {\r\n      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n    });\r\n    saveAs(blob, \"customers.xlsx\");\r\n  };\r\n\r\n  const exportToCSV = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(filtered);\r\n    const csv = XLSX.utils.sheet_to_csv(worksheet);\r\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\r\n    saveAs(blob, \"customers.csv\");\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    const doc = new jsPDF();\r\n    const tableColumn = [\r\n      \"Name\", \"Short Name\", \"Contact Person\", \"Address\", \"Email\",\r\n      \"Phone\", \"GSTIN\", \"Country\", \"Active\"\r\n    ];\r\n    const tableRows = filtered.map(c => [\r\n      c.customer_name,\r\n      c.customer_short_name,\r\n      c.customer_contact_person,\r\n      c.customer_address,\r\n      c.customer_mail_id,\r\n      c.customer_contact_number,\r\n      c.customer_gst_num,\r\n      c.customer_country,\r\n      c.customer_active ? \"Yes\" : \"No\"\r\n    ]);\r\n    autoTable(doc, {\r\n      head: [tableColumn],\r\n      body: tableRows,\r\n      styles: { fontSize: 8 },\r\n      startY: 20\r\n    });\r\n    doc.save(\"customers.pdf\");\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    const printWindow = window.open('', '_blank');\r\n    if (!printWindow) return;\r\n\r\n    const tableRows = filtered.map(c => `\r\n      <tr>\r\n        <td>${c.customer_name}</td>\r\n        <td>${c.customer_short_name}</td>\r\n        <td>${c.customer_contact_person}</td>\r\n        <td>${c.customer_address}</td>\r\n        <td>${c.customer_mail_id}</td>\r\n        <td>${c.customer_contact_number}</td>\r\n        <td>${c.customer_gst_num}</td>\r\n        <td>${c.customer_country}</td>\r\n        <td>${c.customer_active ? \"Yes\" : \"No\"}</td>\r\n      </tr>\r\n    `).join(\"\");\r\n\r\n    const html = `\r\n      <html>\r\n        <head>\r\n          <title>Customer List</title>\r\n          <style>\r\n            table { width: 100%; border-collapse: collapse; }\r\n            th, td { border: 1px solid #ccc; padding: 8px; text-align: left; font-size: 12px; }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <h2>Customer List</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Short Name</th>\r\n                <th>Contact Person</th>\r\n                <th>Address</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>GSTIN</th>\r\n                <th>Country</th>\r\n                <th>Active</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              ${tableRows}\r\n            </tbody>\r\n          </table>\r\n        </body>\r\n      </html>\r\n    `;\r\n    printWindow.document.write(html);\r\n    printWindow.document.close();\r\n    printWindow.print();\r\n  };\r\n\r\n  const columns = [\r\n    { name: \"Name\", selector: (row: Customer) => row.customer_name, sortable: true },\r\n    { name: \"Short Name\", selector: (row: Customer) => row.customer_short_name },\r\n    { name: \"Contact Person\", selector: (row: Customer) => row.customer_contact_person },\r\n    { name: \"Address\", selector: (row: Customer) => row.customer_address },\r\n    { name: \"Email\", selector: (row: Customer) => row.customer_mail_id },\r\n    { name: \"Phone\", selector: (row: Customer) => row.customer_contact_number },\r\n    { name: \"GSTIN\", selector: (row: Customer) => row.customer_gst_num },\r\n    { name: \"Country\", selector: (row: Customer) => row.customer_country },\r\n    { name: \"Active\", selector: (row: Customer) => row.customer_active ? \"Yes\" : \"No\" },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row: Customer) => (\r\n        <div className=\"flex space-x-3\">\r\n          <Link href={`/customer/view/${row.customer_id}`}>\r\n            <FaEye className=\"text-blue-600 hover:text-blue-800 cursor-pointer\" title=\"View\" />\r\n          </Link>\r\n          <Link href={`/customer/edit/${row.customer_id}`}>\r\n            <FaEdit className=\"text-green-600 hover:text-green-800 cursor-pointer\" title=\"Edit\" />\r\n          </Link>\r\n          <button onClick={() => handleDelete(row)}>\r\n            <FaTrash className=\"text-red-600 hover:text-red-800 cursor-pointer\" title=\"Delete\" />\r\n          </button>\r\n        </div>\r\n      ),\r\n      ignoreRowClick: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"text-black dark:text-white\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h1 className=\"text-2xl font-bold\">Customer List</h1>\r\n        <a\r\n          href=\"/customer\"\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\r\n        >\r\n          + Add\r\n        </a>\r\n      </div>\r\n\r\n      {error && <p className=\"text-red-600 mb-4\">{error}</p>}\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        className=\"mb-4 px-3 py-2 border rounded w-full max-w-md\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n\r\n      {/* Export Buttons */}\r\n      <div className=\"flex flex-wrap gap-2 mb-4\">\r\n        <button onClick={exportToExcel} className=\"bg-green-600 text-white px-4 py-1 rounded hover:bg-green-700\">\r\n          Export Excel\r\n        </button>\r\n        <button onClick={exportToCSV} className=\"bg-yellow-600 text-white px-4 py-1 rounded hover:bg-yellow-700\">\r\n          Export CSV\r\n        </button>\r\n        <button onClick={exportToPDF} className=\"bg-red-600 text-white px-4 py-1 rounded hover:bg-red-700\">\r\n          Export PDF\r\n        </button>\r\n        <button onClick={handlePrint} className=\"bg-blue-600 text-white px-4 py-1 rounded hover:bg-blue-700\">\r\n          Print\r\n        </button>\r\n      </div>\r\n\r\n      <DataTable\r\n        columns={columns}\r\n        data={filtered}\r\n        pagination\r\n        highlightOnHover\r\n        responsive\r\n        striped\r\n        dense\r\n        customStyles={{\r\n          rows: {\r\n            style: {\r\n              fontSize: '0.875rem',\r\n              paddingTop: '0.5rem',\r\n              paddingBottom: '0.5rem',\r\n            },\r\n          },\r\n          headCells: {\r\n            style: {\r\n              fontSize: '0.875rem',\r\n              fontWeight: '600',\r\n            },\r\n          },\r\n          cells: {\r\n            style: {\r\n              fontSize: '0.875rem',\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;AAwBe,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACvD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe;YACb,IAAI;gBACF,MAAM,MAAM,MAAM,MAAM;gBACxB,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;gBAC7B,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,aAAa,KAAK,SAAS;gBAC3B,YAAY,KAAK,SAAS;YAC5B,EAAE,OAAO,KAAK;gBACZ,SAAS,AAAC,IAAc,OAAO;YACjC;QACF;QAEA;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe,UAAU,MAAM,CAAC,CAAC,IACrC,GAAG,EAAE,aAAa,CAAC,CAAC,EAAE,EAAE,uBAAuB,CAAC,CAAC,EAAE,EAAE,gBAAgB,EAAE,CACpE,WAAW,GACX,QAAQ,CAAC,OAAO,WAAW;QAEhC,YAAY;IACd,GAAG;QAAC;QAAQ;KAAU;IAEtB,MAAM,eAAe,OAAO;QAC1B,MAAM,gBAAgB,QAAQ,CAAC,gCAAgC,EAAE,SAAS,aAAa,CAAC,CAAC,CAAC;QAC1F,IAAI,CAAC,eAAe;QAEpB,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,CAAC,cAAc,EAAE,SAAS,WAAW,EAAE,EAAE;gBAC/D,QAAQ;YACV;YAEA,MAAM,SAAS,MAAM,IAAI,IAAI;YAE7B,IAAI,IAAI,EAAE,EAAE;gBACV,MAAM;gBACN,aAAa,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,IAAK,EAAE,WAAW,KAAK,SAAS,WAAW;YAC9E,OAAO;gBACL,MAAM,OAAO,OAAO,IAAI;YAC1B;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,MAAM;QACR;IACF;IAEA,MAAM,gBAAgB;QACpB,MAAM,YAAY,6HAAA,CAAA,QAAU,CAAC,aAAa,CAAC;QAC3C,MAAM,WAAW,6HAAA,CAAA,QAAU,CAAC,QAAQ;QACpC,6HAAA,CAAA,QAAU,CAAC,iBAAiB,CAAC,UAAU,WAAW;QAClD,MAAM,cAAc,6HAAA,CAAA,QAAU,CAAC,UAAU;YAAE,UAAU;YAAQ,MAAM;QAAQ;QAC3E,MAAM,OAAO,IAAI,KAAK;YAAC;SAAY,EAAE;YACnC,MAAM;QACR;QACA,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;IACf;IAEA,MAAM,cAAc;QAClB,MAAM,YAAY,6HAAA,CAAA,QAAU,CAAC,aAAa,CAAC;QAC3C,MAAM,MAAM,6HAAA,CAAA,QAAU,CAAC,YAAY,CAAC;QACpC,MAAM,OAAO,IAAI,KAAK;YAAC;SAAI,EAAE;YAAE,MAAM;QAA0B;QAC/D,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;IACf;IAEA,MAAM,cAAc;QAClB,MAAM,MAAM,IAAI,mJAAA,CAAA,UAAK;QACrB,MAAM,cAAc;YAClB;YAAQ;YAAc;YAAkB;YAAW;YACnD;YAAS;YAAS;YAAW;SAC9B;QACD,MAAM,YAAY,SAAS,GAAG,CAAC,CAAA,IAAK;gBAClC,EAAE,aAAa;gBACf,EAAE,mBAAmB;gBACrB,EAAE,uBAAuB;gBACzB,EAAE,gBAAgB;gBAClB,EAAE,gBAAgB;gBAClB,EAAE,uBAAuB;gBACzB,EAAE,gBAAgB;gBAClB,EAAE,gBAAgB;gBAClB,EAAE,eAAe,GAAG,QAAQ;aAC7B;QACD,CAAA,GAAA,2KAAA,CAAA,UAAS,AAAD,EAAE,KAAK;YACb,MAAM;gBAAC;aAAY;YACnB,MAAM;YACN,QAAQ;gBAAE,UAAU;YAAE;YACtB,QAAQ;QACV;QACA,IAAI,IAAI,CAAC;IACX;IAEA,MAAM,cAAc;QAClB,MAAM,cAAc,OAAO,IAAI,CAAC,IAAI;QACpC,IAAI,CAAC,aAAa;QAElB,MAAM,YAAY,SAAS,GAAG,CAAC,CAAA,IAAK,CAAC;;YAE7B,EAAE,EAAE,aAAa,CAAC;YAClB,EAAE,EAAE,mBAAmB,CAAC;YACxB,EAAE,EAAE,uBAAuB,CAAC;YAC5B,EAAE,EAAE,gBAAgB,CAAC;YACrB,EAAE,EAAE,gBAAgB,CAAC;YACrB,EAAE,EAAE,uBAAuB,CAAC;YAC5B,EAAE,EAAE,gBAAgB,CAAC;YACrB,EAAE,EAAE,gBAAgB,CAAC;YACrB,EAAE,EAAE,eAAe,GAAG,QAAQ,KAAK;;IAE3C,CAAC,EAAE,IAAI,CAAC;QAER,MAAM,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;cA0BJ,EAAE,UAAU;;;;;IAKtB,CAAC;QACD,YAAY,QAAQ,CAAC,KAAK,CAAC;QAC3B,YAAY,QAAQ,CAAC,KAAK;QAC1B,YAAY,KAAK;IACnB;IAEA,MAAM,UAAU;QACd;YAAE,MAAM;YAAQ,UAAU,CAAC,MAAkB,IAAI,aAAa;YAAE,UAAU;QAAK;QAC/E;YAAE,MAAM;YAAc,UAAU,CAAC,MAAkB,IAAI,mBAAmB;QAAC;QAC3E;YAAE,MAAM;YAAkB,UAAU,CAAC,MAAkB,IAAI,uBAAuB;QAAC;QACnF;YAAE,MAAM;YAAW,UAAU,CAAC,MAAkB,IAAI,gBAAgB;QAAC;QACrE;YAAE,MAAM;YAAS,UAAU,CAAC,MAAkB,IAAI,gBAAgB;QAAC;QACnE;YAAE,MAAM;YAAS,UAAU,CAAC,MAAkB,IAAI,uBAAuB;QAAC;QAC1E;YAAE,MAAM;YAAS,UAAU,CAAC,MAAkB,IAAI,gBAAgB;QAAC;QACnE;YAAE,MAAM;YAAW,UAAU,CAAC,MAAkB,IAAI,gBAAgB;QAAC;QACrE;YAAE,MAAM;YAAU,UAAU,CAAC,MAAkB,IAAI,eAAe,GAAG,QAAQ;QAAK;QAClF;YACE,MAAM;YACN,MAAM,CAAC,oBACL,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAM,CAAC,eAAe,EAAE,IAAI,WAAW,EAAE;sCAC7C,cAAA,8OAAC,8IAAA,CAAA,QAAK;gCAAC,WAAU;gCAAmD,OAAM;;;;;;;;;;;sCAE5E,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAM,CAAC,eAAe,EAAE,IAAI,WAAW,EAAE;sCAC7C,cAAA,8OAAC,8IAAA,CAAA,SAAM;gCAAC,WAAU;gCAAqD,OAAM;;;;;;;;;;;sCAE/E,8OAAC;4BAAO,SAAS,IAAM,aAAa;sCAClC,cAAA,8OAAC,8IAAA,CAAA,UAAO;gCAAC,WAAU;gCAAiD,OAAM;;;;;;;;;;;;;;;;;YAIhF,gBAAgB;QAClB;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAqB;;;;;;kCACnC,8OAAC;wBACC,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;YAKF,uBAAS,8OAAC;gBAAE,WAAU;0BAAqB;;;;;;0BAE5C,8OAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,WAAU;gBACV,OAAO;gBACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;;;;;;0BAI3C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAO,SAAS;wBAAe,WAAU;kCAA+D;;;;;;kCAGzG,8OAAC;wBAAO,SAAS;wBAAa,WAAU;kCAAiE;;;;;;kCAGzG,8OAAC;wBAAO,SAAS;wBAAa,WAAU;kCAA2D;;;;;;kCAGnG,8OAAC;wBAAO,SAAS;wBAAa,WAAU;kCAA6D;;;;;;;;;;;;0BAKvG,8OAAC,0KAAA,CAAA,UAAS;gBACR,SAAS;gBACT,MAAM;gBACN,UAAU;gBACV,gBAAgB;gBAChB,UAAU;gBACV,OAAO;gBACP,KAAK;gBACL,cAAc;oBACZ,MAAM;wBACJ,OAAO;4BACL,UAAU;4BACV,YAAY;4BACZ,eAAe;wBACjB;oBACF;oBACA,WAAW;wBACT,OAAO;4BACL,UAAU;4BACV,YAAY;wBACd;oBACF;oBACA,OAAO;wBACL,OAAO;4BACL,UAAU;wBACZ;oBACF;gBACF;;;;;;;;;;;;AAIR","debugId":null}}]
}