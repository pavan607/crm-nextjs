{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Downloads/crm%20org/crm/app/hooks/useEmployeeSession.ts"],"sourcesContent":["// hooks/useEmployeeSession.ts\r\n'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ninterface Employee {\r\n  employee_id: number;\r\n  employee_number: string;\r\n  employee_email: string;\r\n  employee_first_name: string;\r\n  employee_last_name: string;\r\n}\r\n\r\nexport const useEmployeeSession = () => {\r\n  const [employee, setEmployee] = useState<Employee | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const loadEmployee = () => {\r\n      try {\r\n        const employeeData = sessionStorage.getItem('loggedInEmployee');\r\n        if (employeeData) {\r\n          setEmployee(JSON.parse(employeeData));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading employee session:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadEmployee();\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    sessionStorage.removeItem('loggedInEmployee');\r\n    setEmployee(null);\r\n    router.push('/login');\r\n  }, [router]);\r\n\r\n  const requireAuth = useCallback(() => {\r\n    if (!loading && !employee) {\r\n      router.push('/login');\r\n      return false;\r\n    }\r\n    return true;\r\n  }, [loading, employee, router]);\r\n\r\n  return {\r\n    employee,\r\n    loading,\r\n    logout,\r\n    requireAuth,\r\n    isLoggedIn: !!employee,\r\n  };\r\n};"],"names":[],"mappings":"AAAA,8BAA8B;;;;AAG9B;AACA;AAHA;;;AAaO,MAAM,qBAAqB;IAChC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IAC1D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,IAAI;gBACF,MAAM,eAAe,eAAe,OAAO,CAAC;gBAC5C,IAAI,cAAc;oBAChB,YAAY,KAAK,KAAK,CAAC;gBACzB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,mCAAmC;YACnD,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACzB,eAAe,UAAU,CAAC;QAC1B,YAAY;QACZ,OAAO,IAAI,CAAC;IACd,GAAG;QAAC;KAAO;IAEX,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC9B,IAAI,CAAC,WAAW,CAAC,UAAU;YACzB,OAAO,IAAI,CAAC;YACZ,OAAO;QACT;QACA,OAAO;IACT,GAAG;QAAC;QAAS;QAAU;KAAO;IAE9B,OAAO;QACL;QACA;QACA;QACA;QACA,YAAY,CAAC,CAAC;IAChB;AACF","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Downloads/crm%20org/crm/app/enquiry/add/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter, usePathname } from 'next/navigation';\r\nimport Link from 'next/link';\r\nimport { Trash2 } from \"lucide-react\";\r\nimport { useEmployeeSession } from '../../hooks/useEmployeeSession'; \r\n\r\ntype Employee = {\r\n  employee_id: number;\r\n  employee_first_name: string;\r\n  employee_last_name: string;\r\n};\r\n\r\ntype Product = {\r\n  product_id: number;          \r\n  product_name: string;        \r\n  product_code: string;        \r\n  product_type: string;        \r\n  product_model_number: string; \r\n  product_uom: string;         \r\n};\r\n\r\ntype EnquiryProduct = {\r\n  id: string;\r\n  product_id: number;          \r\n  product_name: string;\r\n  product_code: string;\r\n  product_type: string;\r\n  product_model_number: string;\r\n  product_uom: string;\r\n  enquiry_product_quantity: number;  \r\n  enquiry_product_price: number;     \r\n};\r\n\r\ntype FormDataType = {\r\n  opportunityName: string;\r\n  contactName: string;\r\n  type: string;\r\n  leadSource: string;\r\n  assignedTo: string;\r\n  campaignSource: string;\r\n  weightedRevenue: string;\r\n  organizationName: string;\r\n  amount: string;\r\n  expectedCloseDate: string;\r\n  nextStep: string;\r\n  salesStage: string;\r\n  probability: string;\r\n  description: string;\r\n  attachments: File[];\r\n  comment: string;\r\n};\r\n\r\nconst InlineField = ({\r\n  label,\r\n  children,\r\n}: {\r\n  label: string;\r\n  children: React.ReactNode;\r\n}) => (\r\n  <div className=\"flex items-center gap-2 flex-1 min-w-0\">\r\n    <label className=\"whitespace-nowrap w-40 font-medium\">{label}:</label>\r\n    <div className=\"flex-grow min-w-0\">{children}</div>\r\n  </div>\r\n);\r\n\r\nconst ProductModal = ({\r\n  isOpen,\r\n  onClose,\r\n  onSave,\r\n  products,\r\n}: {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (product: EnquiryProduct) => void;\r\n  products: Product[];\r\n}) => {\r\n  const [selectedProductId, setSelectedProductId] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [price, setPrice] = useState(0);\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n\r\n  const handleProductSelect = (productId: string) => {\r\n    setSelectedProductId(productId);\r\n    const product = products.find(p => p.product_id.toString() === productId); // was crmtf_product_id\r\n    setSelectedProduct(product || null);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!selectedProduct || quantity <= 0 || price <= 0) {\r\n      alert('Please fill in all required fields with valid values');\r\n      return;\r\n    }\r\n\r\n    const enquiryProduct: EnquiryProduct = {\r\n      id: Date.now().toString(),\r\n      product_id: selectedProduct.product_id,              \r\n      product_name: selectedProduct.product_name,          \r\n      product_code: selectedProduct.product_code,          \r\n      product_type: selectedProduct.product_type,          \r\n      product_model_number: selectedProduct.product_model_number, \r\n      product_uom: selectedProduct.product_uom,            \r\n      enquiry_product_quantity: quantity,                  \r\n      enquiry_product_price: price,                        \r\n    };\r\n\r\n    onSave(enquiryProduct);\r\n    handleClose();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedProductId('');\r\n    setQuantity(1);\r\n    setPrice(0);\r\n    setSelectedProduct(null);\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-4 w-full max-w-lg mx-4 max-h-[90vh] overflow-y-auto\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-lg font-semibold\">Add Product</h2>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"text-gray-500 hover:text-gray-700 text-xl leading-none\"\r\n          >\r\n            Ã—\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          {/* Product Name Dropdown */}\r\n          <div>\r\n            <label className=\"block font-medium mb-1 text-sm\">Product Name*</label>\r\n            <select\r\n              value={selectedProductId}\r\n              onChange={(e) => handleProductSelect(e.target.value)}\r\n              className=\"w-full border border-gray-300 rounded-md p-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              required\r\n            >\r\n              <option value=\"\">-- Select Product --</option>\r\n              {products.map((product) => (\r\n                <option key={product.product_id} value={product.product_id}> \r\n                  {product.product_name}  \r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Product Details Inputs all inline */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n            <div>\r\n              <label className=\"block font-medium mb-1 text-sm\">Code</label>\r\n              <input\r\n                type=\"text\"\r\n                value={selectedProduct?.product_code || ''}\r\n                className=\"w-full border border-gray-300 rounded-md p-2 bg-gray-100 text-sm\"\r\n                disabled\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium mb-1 text-sm\">Type</label>\r\n              <input\r\n                type=\"text\"\r\n                value={selectedProduct?.product_type || ''}\r\n                className=\"w-full border border-gray-300 rounded-md p-2 bg-gray-100 text-sm\"\r\n                disabled\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium mb-1 text-sm\">Model</label>\r\n              <input\r\n                type=\"text\"\r\n                value={selectedProduct?.product_model_number || ''}\r\n                className=\"w-full border border-gray-300 rounded-md p-2 bg-gray-100 text-sm\"\r\n                disabled\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium mb-1 text-sm\">UOM</label>\r\n              <input\r\n                type=\"text\"\r\n                value={selectedProduct?.product_uom || ''}\r\n                className=\"w-full border border-gray-300 rounded-md p-2 bg-gray-100 text-sm\"\r\n                disabled\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium mb-1 text-sm\">Quantity*</label>\r\n              <input\r\n                type=\"number\"\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(parseInt(e.target.value) || 1)}\r\n                className=\"w-full border border-gray-300 rounded-md p-2 text-sm\"\r\n                min=\"1\"\r\n                required\r\n                placeholder=\"Quantity\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium mb-1 text-sm\">Price*</label>\r\n              <input\r\n                type=\"number\"\r\n                value={price}\r\n                onChange={(e) => setPrice(parseFloat(e.target.value) || 0)}\r\n                className=\"w-full border border-gray-300 rounded-md p-2 text-sm\"\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n                required\r\n                placeholder=\"Unit Price\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Total only if valid */}\r\n          {quantity > 0 && price > 0 && (\r\n            <div className=\"mt-2 text-sm text-blue-700 bg-blue-50 rounded p-2\">\r\n              Total: Rs {(quantity * price).toFixed(2)}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Buttons */}\r\n        <div className=\"flex gap-1 justify-end mt-4 pt-3\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleClose}\r\n            className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-1.5 rounded text-sm\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleSave}\r\n            disabled={!selectedProduct || quantity <= 0 || price <= 0}\r\n            className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed text-white px-4 py-1.5 rounded text-sm\"\r\n          >\r\n            Add Product\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LeadForm = () => {\r\n  const { employee, loading: sessionLoading, requireAuth } = useEmployeeSession();\r\n  const [employees, setEmployees] = useState<Employee[]>([]);\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [enquiryProducts, setEnquiryProducts] = useState<EnquiryProduct[]>([]);\r\n  const [isProductModalOpen, setIsProductModalOpen] = useState(false);\r\n  const [mounted, setMounted] = useState(false);\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n  \r\n  const [formData, setFormData] = useState<FormDataType>({\r\n    opportunityName: '',\r\n    contactName: '',\r\n    type: '',\r\n    leadSource: '',\r\n    assignedTo: '',\r\n    campaignSource: '',\r\n    weightedRevenue: '',\r\n    organizationName: '',\r\n    amount: '',\r\n    expectedCloseDate: '',\r\n    nextStep: '',\r\n    salesStage: '',\r\n    probability: '',\r\n    description: '',\r\n    attachments: [],\r\n    comment: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n    \r\n    // Check if user is authenticated\r\n    if (!sessionLoading && !requireAuth()) {\r\n      return;\r\n    }\r\n    \r\n    fetch('/api/enquiry/employee_dropdown')\r\n      .then(res => res.json())\r\n      .then((data: Employee[]) => setEmployees(data))\r\n      .catch(err => console.error('Failed to load employees:', err));\r\n\r\n    fetch('/api/enquiry/product_dropdown')\r\n      .then(res => res.json())\r\n      .then((data: Product[]) => setProducts(data))\r\n      .catch(err => console.error('Failed to load products:', err));\r\n  }, [sessionLoading, requireAuth]);\r\n\r\n  const renderBreadcrumb = () => {\r\n    if (!mounted) return null;\r\n    \r\n    return (\r\n      <div className=\"text-sm\">\r\n        <Link \r\n          href=\"/enquiry/list\" \r\n          className=\"text-blue-600 hover:underline\"\r\n        >\r\n          All\r\n        </Link>\r\n        <span className=\"mx-2 text-gray-500\">â†’</span>\r\n        <Link \r\n          href=\"/enquiry/add\" \r\n          className=\"text-blue-600 hover:underline\"\r\n        >\r\n          Add\r\n        </Link>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      setFormData({ ...formData, attachments: Array.from(e.target.files) });\r\n    }\r\n  };\r\n\r\n  const handleAddProduct = (product: EnquiryProduct) => {\r\n    setEnquiryProducts([...enquiryProducts, product]);\r\n  };\r\n\r\n  const handleProductChange = (\r\n    index: number,\r\n    field: 'enquiry_product_quantity' | 'enquiry_product_price', // was 'crm_quantity' | 'crm_price'\r\n    value: number\r\n  ) => {\r\n    const updatedProducts = [...enquiryProducts];\r\n    updatedProducts[index] = {\r\n      ...updatedProducts[index],\r\n      [field]: value,\r\n    };\r\n    setEnquiryProducts(updatedProducts);\r\n  };\r\n\r\n  const handleRemoveProduct = (id: string) => {\r\n    setEnquiryProducts(enquiryProducts.filter(p => p.id !== id));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!employee) {\r\n      alert('Session expired. Please login again.');\r\n      router.push('/login');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = new FormData();\r\n\r\n      Object.entries(formData).forEach(([key, value]) => {\r\n        if (key !== 'attachments') {\r\n          payload.append(key, value as string);\r\n        }\r\n      });\r\n\r\n      formData.attachments.forEach(file => {\r\n        payload.append('attachments', file);\r\n      });\r\n\r\n      // Add products data\r\n      payload.append('products', JSON.stringify(enquiryProducts));\r\n\r\n      // Add the logged-in employee's ID as created_by\r\n      payload.append('createdBy', employee.employee_id.toString());\r\n\r\n      const response = await fetch('/api/enquiry/add', {\r\n        method: 'POST',\r\n        body: payload,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        alert(`Failed to create lead: ${errorData.error}`);\r\n        return;\r\n      }\r\n\r\n      const result = await response.json();\r\n      alert(`Lead created successfully with ID: ${result.leadId}`);\r\n\r\n      setFormData({\r\n        opportunityName: '',\r\n        contactName: '',\r\n        type: '',\r\n        leadSource: '',\r\n        assignedTo: '',\r\n        campaignSource: '',\r\n        weightedRevenue: '',\r\n        organizationName: '',\r\n        amount: '',\r\n        expectedCloseDate: '',\r\n        nextStep: '',\r\n        salesStage: '',\r\n        probability: '',\r\n        description: '',\r\n        attachments: [],\r\n        comment: '',\r\n      });\r\n      setEnquiryProducts([]);\r\n    } catch (error) {\r\n      console.error('Submit error:', error);\r\n      alert('An error occurred while creating the lead.');\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setFormData({\r\n      opportunityName: '',\r\n      contactName: '',\r\n      type: '',\r\n      leadSource: '',\r\n      assignedTo: '',\r\n      campaignSource: '',\r\n      weightedRevenue: '',\r\n      organizationName: '',\r\n      amount: '',\r\n      expectedCloseDate: '',\r\n      nextStep: '',\r\n      salesStage: '',\r\n      probability: '',\r\n      description: '',\r\n      attachments: [],\r\n      comment: '',\r\n    });\r\n    setEnquiryProducts([]);\r\n    router.push('/enquiry/list');\r\n  };\r\n\r\n  // Show loading while checking authentication\r\n  if (sessionLoading) {\r\n    return <div className=\"p-4\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-2\">\r\n      {/* Breadcrumb in top left corner */}\r\n      <div className=\"mb-2 ml-4\">\r\n        {renderBreadcrumb()}\r\n      </div>\r\n      \r\n      <div className=\"max-w-4xl mx-auto text-sm\">\r\n        <div className=\"flex justify-between items-center mb-3\">\r\n          <h1 className=\"text-2xl font-bold\">Enquiry</h1>\r\n          <button\r\n            type=\"button\"\r\n            className=\"bg-gray-600 hover:bg-gray-700 text-white px-3 py-1 rounded text-sm\"\r\n            onClick={() => router.push('/enquiry/list')}\r\n          >\r\n            Back to List\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\" encType=\"multipart/form-data\">\r\n          {/* Row 1 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Enquiry Name\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"opportunityName\"\r\n                value={formData.opportunityName}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\"\r\n                required\r\n              />\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Contact Name\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"contactName\"\r\n                value={formData.contactName}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\"\r\n                required\r\n              />\r\n            </InlineField>\r\n          </div>\r\n\r\n          {/* Row 2 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Type\">\r\n              <select\r\n                name=\"type\"\r\n                value={formData.type}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              >\r\n                <option value=\"\">-- Select Type --</option>\r\n                <option value=\"New Business\">New Business</option>\r\n                <option value=\"Existing Business\">Existing Business</option>\r\n              </select>\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Lead Source\">\r\n              <select\r\n                name=\"leadSource\"\r\n                value={formData.leadSource}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              >\r\n                <option value=\"\">-- Select Source --</option>\r\n                <option value=\"Cold Call\">Cold Call</option>\r\n                <option value=\"Existing Customer\">Existing Customer</option>\r\n                <option value=\"Self Generated\">Self Generated</option>\r\n                <option value=\"Employee\">Employee</option>\r\n                <option value=\"Partner\">Partner</option>\r\n                <option value=\"Public Relations\">Public Relations</option>\r\n                <option value=\"Direct Mail\">Direct Mail</option>\r\n                <option value=\"Conference\">Conference</option>\r\n                <option value=\"Trade Show\">Trade Show</option>\r\n                <option value=\"Web Site\">Web Site</option>\r\n                <option value=\"Word Of Mouth\">Word Of Mouth</option>\r\n                <option value=\"Other\">Other</option>\r\n              </select>\r\n            </InlineField>\r\n          </div>\r\n\r\n          {/* Row 3 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Assigned To\">\r\n              <select\r\n                name=\"assignedTo\"\r\n                value={formData.assignedTo}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              >\r\n                <option value=\"\">-- Select Employee --</option>\r\n                {employees.map((emp: Employee) => (\r\n                  <option key={emp.employee_id} value={emp.employee_id}>\r\n                    {emp.employee_first_name} {emp.employee_last_name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Campaign Source\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"campaignSource\"\r\n                value={formData.campaignSource}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              />\r\n            </InlineField>\r\n          </div>\r\n\r\n          {/* Row 4 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Weighted Revenue\">\r\n              <input\r\n                type=\"number\"\r\n                name=\"weightedRevenue\"\r\n                value={formData.weightedRevenue}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              />\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Organization Name\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"organizationName\"\r\n                value={formData.organizationName}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              />\r\n            </InlineField>\r\n          </div>\r\n\r\n          {/* Row 5 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Amount\">\r\n              <input\r\n                type=\"number\"\r\n                name=\"amount\"\r\n                value={formData.amount}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              />\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Expected Close Date\">\r\n              <input\r\n                type=\"date\"\r\n                name=\"expectedCloseDate\"\r\n                value={formData.expectedCloseDate}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              />\r\n            </InlineField>\r\n          </div>\r\n\r\n          {/* Row 6 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Next Step\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"nextStep\"\r\n                value={formData.nextStep}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              />\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Sales Stage\">\r\n              <select\r\n                name=\"salesStage\"\r\n                value={formData.salesStage}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              >\r\n                <option value=\"\">-- Select Stage --</option>\r\n                <option value=\"Prospecting\">Prospecting</option>\r\n                <option value=\"Qualification\">Qualification</option>\r\n                <option value=\"Needs Analysis\">Needs Analysis</option>\r\n                <option value=\"Proposal\">Proposal or Price Quote</option>\r\n                <option value=\"Revised Quote\">Revised Quote</option>\r\n                <option value=\"Sales Order\">Sales Order(Client Purchase)</option>\r\n                <option value=\"Invoice\">Invoice</option>\r\n                <option value=\"Payment Due\">Payment Due</option>\r\n                <option value=\"Closed Won\">Closed Won</option>\r\n                <option value=\"Closed Lost\">Closed Lost</option>\r\n              </select>\r\n            </InlineField>\r\n          </div>\r\n\r\n          {/* Row 7 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Probability (%)\">\r\n              <input\r\n                type=\"number\"\r\n                name=\"probability\"\r\n                value={formData.probability}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n                min=\"0\"\r\n                max=\"100\"\r\n              />\r\n            </InlineField>\r\n            <div className=\"flex-1\"></div>\r\n          </div>\r\n\r\n          {/* Full width: Description */}\r\n          <div className=\"flex gap-4\">\r\n            <label className=\"block font-medium mb-1\">Description</label>\r\n            <textarea\r\n              name=\"description\"\r\n              value={formData.description}\r\n              onChange={handleChange}\r\n              className=\"w-full border rounded p-1 h-20 resize-none\"\r\n              placeholder=\"Enter additional details about the lead...\" required\r\n            />\r\n          \r\n\r\n          {/* Full width: Comments */}\r\n          \r\n            <label className=\"block font-medium\">Comments</label>\r\n            <textarea\r\n              name=\"comment\"\r\n              value={formData.comment}\r\n              onChange={handleChange}\r\n              className=\"w-full border rounded p-1 h-20 resize-none\" required\r\n              placeholder=\"Enter your comment...\"\r\n            />\r\n          </div>\r\n\r\n          {/* Full width: Attachments */}\r\n          <div className=\"flex gap-4\">\r\n            <label className=\"block font-medium\">Attachments</label>\r\n            <input\r\n              type=\"file\"\r\n              multiple\r\n              onChange={handleFileChange}\r\n              className=\"w-49 border rounded p-1 text-sm\" required\r\n            />\r\n            {formData.attachments.length > 0 && (\r\n              <ul className=\"mt-2 text-sm text-gray-600\">\r\n                {formData.attachments.map((file, idx) => (\r\n                  <li key={idx}>{file.name}</li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n          {/* Add Product Button */}\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setIsProductModalOpen(true)}\r\n              className=\"bg-green-600 text-white px-2 py-2 rounded hover:bg-green-700 text-sm\"\r\n            >\r\n              + Add Product\r\n            </button>\r\n          </div>\r\n\r\n          {/* Products Table */}\r\n          <div className=\"mt-4\">\r\n            <h3 className=\"font-medium mb-2\">Added Products</h3>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full border-collapse border border-gray-300 text-sm\">\r\n                <thead>\r\n                  <tr className=\"bg-gray-100\">\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Product Name</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Code</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Type</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Model</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">UOM</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Quantity</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Price</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Total</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {enquiryProducts.length === 0 ? (\r\n                    <tr>\r\n                      <td colSpan={9} className=\"border border-gray-300 p-2 text-center text-gray-500\">\r\n                        No products added yet.\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    enquiryProducts.map((product, index) => (\r\n                      <tr key={product.id}>\r\n                        <td className=\"border border-gray-300 p-2\">{product.product_name}</td>\r\n                        <td className=\"border border-gray-300 p-2\">{product.product_code}</td>\r\n                        <td className=\"border border-gray-300 p-2\">{product.product_type}</td>\r\n                        <td className=\"border border-gray-300 p-2\">{product.product_model_number}</td>\r\n                        <td className=\"border border-gray-300 p-2\">{product.product_uom}</td>\r\n                        <td className=\"border border-gray-300 p-2\">\r\n                          <input\r\n                            type=\"number\"\r\n                            value={product.enquiry_product_quantity ?? \"\"}\r\n                            min=\"0\"\r\n                            onChange={(e) =>\r\n                              handleProductChange(\r\n                                index,\r\n                                \"enquiry_product_quantity\",\r\n                                parseInt(e.target.value, 10) || 0\r\n                              )\r\n                            }\r\n                            className=\"w-20 border rounded p-1 text-sm\"\r\n                          />\r\n                        </td>\r\n                        <td className=\"border border-gray-300 p-2\">\r\n                          <input\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            value={product.enquiry_product_price ?? \"\"}\r\n                            onChange={(e) =>\r\n                              handleProductChange(\r\n                                index,\r\n                                \"enquiry_product_price\",\r\n                                parseFloat(e.target.value) || 0\r\n                              )\r\n                            }\r\n                            className=\"w-24 border rounded p-1 text-sm\"\r\n                          />\r\n                        </td>\r\n                        <td className=\"border border-gray-300 p-2 text-right font-medium\">\r\n                          Rs {(product.enquiry_product_quantity * product.enquiry_product_price).toFixed(2)}\r\n                        </td>\r\n                        <td className=\"border border-gray-300 p-2 flex gap-2\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => handleRemoveProduct(product.id)}\r\n                            className=\"bg-red-500 text-white p-1 rounded hover:bg-red-600\"\r\n                            title=\"Remove\"\r\n                          >\r\n                            <Trash2 size={16} />\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Fixed Footer with Save and Cancel Buttons */}\r\n          <div className=\"fixed bottom-6 left-[240px] right-0 z-5\">\r\n            <div className=\"px-4 py-3\">\r\n              <div className=\"flex gap-2 justify-center max-w-5xl mx-auto\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleSubmit}\r\n                  className=\"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 transition text-sm font-medium\"\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"bg-red-500 text-white px-6 py-2 rounded hover:bg-red-600 transition text-sm font-medium\"\r\n                  onClick={handleCancel}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Product Modal */}\r\n      <ProductModal\r\n        isOpen={isProductModalOpen}\r\n        onClose={() => setIsProductModalOpen(false)}\r\n        onSave={handleAddProduct}\r\n        products={products}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeadForm;"],"names":[],"mappings":"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","debugId":null}}]
}