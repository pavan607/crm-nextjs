{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Downloads/crm%20%282%29/crm/app/api/enquiry/product_dropdown/route.ts"],"sourcesContent":["// app/api/products/route.ts\r\nimport {  NextResponse } from 'next/server';\r\nimport mysql from 'mysql2/promise';\r\n\r\nconst dbConfig = {\r\n  host: process.env.DB_HOST || 'localhost',\r\n  user: process.env.DB_USER || 'root',\r\n  password: process.env.DB_PASSWORD || 'root',\r\n  database: process.env.DB_NAME || 'crm',\r\n};\r\n\r\nexport async function GET() {\r\n  let connection;\r\n  \r\n  try {\r\n    connection = await mysql.createConnection(dbConfig);\r\n    \r\n    const [rows] = await connection.execute(`\r\n      SELECT \r\n        product_id,\r\n        product_name,\r\n        product_code,\r\n        product_type,\r\n        product_model_number,\r\n        product_uom\r\n      FROM crm_product \r\n      ORDER BY product_name ASC\r\n    `);\r\n    \r\n    return NextResponse.json(rows);\r\n  } catch (error) {\r\n    console.error('Database error:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to fetch products' },\r\n      { status: 500 }\r\n    );\r\n  } finally {\r\n    if (connection) {\r\n      await connection.end();\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;AAC5B;AACA;;;AAEA,MAAM,WAAW;IACf,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;AACnC;AAEO,eAAe;IACpB,IAAI;IAEJ,IAAI;QACF,aAAa,MAAM,mIAAA,CAAA,UAAK,CAAC,gBAAgB,CAAC;QAE1C,MAAM,CAAC,KAAK,GAAG,MAAM,WAAW,OAAO,CAAC,CAAC;;;;;;;;;;IAUzC,CAAC;QAED,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,IAAI,YAAY;YACd,MAAM,WAAW,GAAG;QACtB;IACF;AACF","debugId":null}}]
}