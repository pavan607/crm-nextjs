{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Downloads/crm%20org/crm/app/lib/db.js"],"sourcesContent":["// lib/db.js\r\nimport mysql from 'mysql2/promise';\r\n\r\nconst pool = mysql.createPool({\r\n  host: process.env.DB_HOST || 'localhost',\r\n  user: process.env.DB_USER || 'root',\r\n  password: process.env.DB_PASSWORD || 'root',\r\n  database: process.env.DB_NAME || 'crm',\r\n  waitForConnections: true,\r\n  connectionLimit: 10,\r\n  queueLimit: 0,\r\n});\r\n\r\nexport default pool;\r\n"],"names":[],"mappings":"AAAA,YAAY;;;;AACZ;;AAEA,MAAM,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IAC5B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;IACjC,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;AACd;uCAEe","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Downloads/crm%20org/crm/app/api/fsn/employee_dropdown/route.ts"],"sourcesContent":["// app/api/fsn/employee_dropdown/route.ts\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport db from '../../../lib/db';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const departmentId = searchParams.get('departmentId');\r\n\r\n    if (!departmentId) {\r\n      return NextResponse.json(\r\n        { error: 'Department ID is required' }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const [rows] = await db.execute(`\r\n      SELECT \r\n        employee_id,\r\n        employee_first_name,\r\n        employee_last_name,\r\n        employee_designation\r\n      FROM crm_employee \r\n      WHERE department_id = ?\r\n      ORDER BY employee_first_name ASC, employee_last_name ASC\r\n    `, [departmentId]);\r\n\r\n    return NextResponse.json(rows);\r\n  } catch (error) {\r\n    console.error('Database error:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to fetch employees' }, \r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":"AAAA,yCAAyC;;;;AACzC;AACA;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,eAAe,aAAa,GAAG,CAAC;QAEtC,IAAI,CAAC,cAAc;YACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA4B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,CAAC,KAAK,GAAG,MAAM,kHAAA,CAAA,UAAE,CAAC,OAAO,CAAC,CAAC;;;;;;;;;IASjC,CAAC,EAAE;YAAC;SAAa;QAEjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}