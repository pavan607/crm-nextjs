{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Downloads/crm%20%282%29/crm/app/lib/db.js"],"sourcesContent":["// lib/db.js\r\nimport mysql from 'mysql2/promise';\r\n\r\nconst pool = mysql.createPool({\r\n  host: process.env.DB_HOST || 'localhost',\r\n  user: process.env.DB_USER || 'root',\r\n  password: process.env.DB_PASSWORD || 'root',\r\n  database: process.env.DB_NAME || 'crm',\r\n  waitForConnections: true,\r\n  connectionLimit: 10,\r\n  queueLimit: 0,\r\n});\r\n\r\nexport default pool;\r\n"],"names":[],"mappings":"AAAA,YAAY;;;;AACZ;;AAEA,MAAM,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IAC5B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;IACjC,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;AACd;uCAEe","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Downloads/crm%20%282%29/crm/app/api/employee/add/route.ts"],"sourcesContent":["// app/api/employee/add/route.ts\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport pool from '../../../lib/db';\r\nimport { writeFile, mkdir } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    // Extract form fields\r\n    const department_id = formData.get('department_id') as string;\r\n    const employee_number = formData.get('employee_number') as string;\r\n    const employee_first_name = formData.get('employee_first_name') as string;\r\n    const employee_last_name = formData.get('employee_last_name') as string;\r\n    const employee_short_name = formData.get('employee_short_name') as string;\r\n    const employee_email = formData.get('employee_email') as string;\r\n    const employee_dob = formData.get('employee_dob') as string;\r\n    const employee_contact_number = formData.get('employee_contact_number') as string;\r\n    const employee_designation = formData.get('employee_designation') as string;\r\n    const employee_reporting_to = formData.get('employee_reporting_to') as string;\r\n    const employee_date_of_reliving = formData.get('employee_date_of_reliving') as string;\r\n\r\n    // Handle file uploads\r\n    const digitalSignatureFile = formData.get('employee_digital_signature') as File | null;\r\n    const photoFile = formData.get('employee_photo') as File | null;\r\n\r\n    let digitalSignaturePath: string | null = null;\r\n    let photoPath: string | null = null;\r\n\r\n    // Prepare uploads directory\r\n    const uploadsDir = path.join(process.cwd(), 'public', 'uploads', 'employees');\r\n    await mkdir(uploadsDir, { recursive: true });\r\n\r\n    // Save digital signature if exists\r\n    if (digitalSignatureFile && digitalSignatureFile.size > 0) {\r\n      const timestamp = Date.now();\r\n      const ext = path.extname(digitalSignatureFile.name);\r\n      const fileName = `signature_${employee_number}_${timestamp}${ext}`;\r\n      const fullPath = path.join(uploadsDir, fileName);\r\n\r\n      const bytes = await digitalSignatureFile.arrayBuffer();\r\n      await writeFile(fullPath, Buffer.from(bytes));\r\n\r\n      digitalSignaturePath = `/uploads/employees/${fileName}`;\r\n    }\r\n\r\n    // Save photo if exists\r\n    if (photoFile && photoFile.size > 0) {\r\n      const timestamp = Date.now();\r\n      const ext = path.extname(photoFile.name);\r\n      const fileName = `photo_${employee_number}_${timestamp}${ext}`;\r\n      const fullPath = path.join(uploadsDir, fileName);\r\n\r\n      const bytes = await photoFile.arrayBuffer();\r\n      await writeFile(fullPath, Buffer.from(bytes));\r\n\r\n      photoPath = `/uploads/employees/${fileName}`;\r\n    }\r\n\r\n    // Get a connection from the pool\r\n    const conn = await pool.getConnection();\r\n\r\n    // Call stored procedure\r\n    await conn.execute(\r\n      `CALL AddEmployee(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\r\n      [\r\n        parseInt(department_id),\r\n        employee_number,\r\n        employee_first_name,\r\n        employee_last_name,\r\n        employee_short_name,\r\n        employee_email,\r\n        employee_dob || null,\r\n        employee_contact_number,\r\n        employee_designation,\r\n        employee_reporting_to,\r\n        digitalSignaturePath,\r\n        employee_date_of_reliving || null,\r\n        photoPath,\r\n      ]\r\n    );\r\n\r\n    conn.release();\r\n\r\n    return NextResponse.json({\r\n      message: 'Employee registered successfully',\r\n      success: true,\r\n    });\r\n  } catch (error: unknown) {\r\n    console.error('Error registering employee:', error);\r\n    let message = 'Internal Server Error';\r\n    if (error instanceof Error) {\r\n      message = error.message;\r\n    }\r\n    return NextResponse.json(\r\n      { message, success: false },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}