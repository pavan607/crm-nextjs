{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Downloads/crm/app/enquiry/edit/%5BenquiryId%5D/page.tsx"],"sourcesContent":["//app/leads/[leadId]/edit/page.tsx\r\n'use client';\r\n\r\nimport React, { useEffect, useState, use } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Link from 'next/link';\r\nimport { Trash2 } from 'lucide-react';\r\nimport { PencilIcon } from '@heroicons/react/24/solid';\r\nimport { useEmployeeSession } from '../../hooks/useEmployeeSession';\r\n// --- Type Definitions ---\r\ntype Attachment = {\r\n  crm_attachment_id?: number;\r\n  file_name: string;\r\n  file_path: string;\r\n};\r\n\r\ntype Comment = {\r\n    comment_text: string;\r\n  commented_on: string;\r\n  commented_by_name: string;\r\n};\r\n\r\ntype Product = {\r\n  crmtf_product_name: string;\r\n  crmtf_product_id: number;\r\n  crmtf_product_type?: string;\r\n  crmtf_product_code?: string;\r\n  crmtf_product_model_number?: string;\r\n  crmtf_product_uom?: string;\r\n  crm_quantity?: number;\r\n  crm_price?: number;\r\n};\r\n\r\ntype Employee = {\r\n  employee_id: number;\r\n  employee_first_name: string;\r\n  employee_last_name: string;\r\n  employee_email?: string;\r\n};\r\n\r\ntype AvailableProduct = {\r\n  crmtf_product_id: number;\r\n  crmtf_product_name: string;\r\n  crmtf_product_type?: string;\r\n  crmtf_product_code?: string;\r\n  crmtf_product_model_number?: string;\r\n  crmtf_product_uom?: string;\r\n};\r\n\r\ntype EnquiryProduct = {\r\n  id: string;\r\n  crmtf_product_id: number;\r\n  product_name: string;\r\n  product_code: string;\r\n  product_type: string;\r\n  product_model_number: string;\r\n  product_uom: string;\r\n  crm_quantity: number;\r\n  crm_price: number;\r\n  session_flag?: 'A' | 'E' | 'D' | null;\r\n};\r\n\r\ntype Lead = {\r\n  leadId: number;\r\n  crm_enquiry_number?: string;\r\n  opportunityName: string;\r\n  contactName?: string;\r\n  type?: string;\r\n  leadSource?: string;\r\n  assignedToName?: string;\r\n  assignedTo?: number;\r\n  campaignSource?: string;\r\n  weightedRevenue?: number;\r\n  organizationName?: string;\r\n  amount?: number;\r\n  expectedCloseDate?: string;\r\n  actualCloseDate?: string;\r\n  nextStep?: string;\r\n  salesStage?: string;\r\n  probability?: number;\r\n  description?: string;\r\n  attachments?: Attachment[];\r\n  comments?: Comment[];\r\n  products?: Product[];\r\n  employee?: Employee;\r\n  comment: string;\r\n};\r\n\r\ntype ApiLead = {\r\n  crm_enquiry_id: number;\r\n  crm_enquiry_number?: string;\r\n  crm_opportunity_name: string;\r\n  crm_contact_name?: string;\r\n  crm_type?: string;\r\n  crm_lead_source?: string;\r\n  assignedToName?: string;\r\n  crm_assigned_to?: number;\r\n  crm_campaign_source?: string;\r\n  crm_weighted_revenue?: number;\r\n  crm_organization_name?: string;\r\n  crm_amount?: number;\r\n  crm_expected_close_date?: string;\r\n  crm_close_date?: string;\r\n  crm_next_step?: string;\r\n  crm_sales_stage?: string;\r\n  crm_probability?: number;\r\n  crm_description?: string;\r\n  attachments?: Attachment[];\r\n  comments?: Comment[];\r\n  products?: Product[];\r\n  employee?: Employee;\r\n};\r\n\r\ntype FormDataType = {\r\n  crm_enquiry_number: string;\r\n  opportunityName: string;\r\n  contactName: string;\r\n  type: string;\r\n  leadSource: string;\r\n  assignedTo: string;\r\n  campaignSource: string;\r\n  weightedRevenue: string;\r\n  organizationName: string;\r\n  amount: string;\r\n  expectedCloseDate: string;\r\n  actualCloseDate: string;\r\n  hasActualCloseDate: boolean;\r\n  nextStep: string;\r\n  salesStage: string;\r\n  probability: string;\r\n  description: string;\r\n  attachments: File[];\r\n  comment: string;\r\n};\r\n\r\ninterface Props {\r\n  params: Promise<{ leadId: string }>;\r\n}\r\ndeclare global {\r\n  interface Window {\r\n    logSessionData?: () => void;\r\n  }\r\n}\r\nconst InlineField = ({\r\n  label,\r\n  children,\r\n}: {\r\n  label: string;\r\n  children: React.ReactNode;\r\n}) => (\r\n  <div className=\"flex items-center gap-2 flex-1 min-w-0\">\r\n    <label className=\"whitespace-nowrap w-40 font-medium\">{label}:</label>\r\n    <div className=\"flex-grow min-w-0\">{children}</div>\r\n  </div>\r\n);\r\n\r\nconst ProductModal = ({\r\n  isOpen,\r\n  onClose,\r\n  onSave,\r\n  products,\r\n  editingProduct,\r\n}: {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (product: EnquiryProduct) => void;\r\n  products: AvailableProduct[];\r\n  editingProduct?: EnquiryProduct | null;\r\n}) => {\r\n  const [selectedProductId, setSelectedProductId] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [price, setPrice] = useState(0);\r\n  const [selectedProduct, setSelectedProduct] = useState<AvailableProduct | null>(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      if (editingProduct) {\r\n        setSelectedProductId(editingProduct.crmtf_product_id.toString());\r\n        setQuantity(editingProduct.crm_quantity);\r\n        setPrice(editingProduct.crm_price);\r\n        const product = products.find(p => p.crmtf_product_id === editingProduct.crmtf_product_id);\r\n        setSelectedProduct(product || null);\r\n      } else {\r\n        setSelectedProductId('');\r\n        setQuantity(1);\r\n        setPrice(0);\r\n        setSelectedProduct(null);\r\n      }\r\n    }\r\n  }, [isOpen, editingProduct, products]);\r\n\r\n  const handleProductSelect = (productId: string) => {\r\n    setSelectedProductId(productId);\r\n    const product = products.find(p => p.crmtf_product_id.toString() === productId);\r\n    setSelectedProduct(product || null);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!selectedProduct || quantity <= 0 || price <= 0) {\r\n      alert('Please fill in all required fields with valid values');\r\n      return;\r\n    }\r\n    const enquiryProduct: EnquiryProduct = {\r\n      id: editingProduct?.id || Date.now().toString(),\r\n      crmtf_product_id: selectedProduct.crmtf_product_id,\r\n      product_name: selectedProduct.crmtf_product_name,\r\n      product_code: selectedProduct.crmtf_product_code || '',\r\n      product_type: selectedProduct.crmtf_product_type || '',\r\n      product_model_number: selectedProduct.crmtf_product_model_number || '',\r\n      product_uom: selectedProduct.crmtf_product_uom || '',\r\n      crm_quantity: quantity,\r\n      crm_price: price,\r\n    };\r\n    onSave(enquiryProduct);\r\n    handleClose();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedProductId('');\r\n    setQuantity(1);\r\n    setPrice(0);\r\n    setSelectedProduct(null);\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-4 w-full max-w-lg mx-4 max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-lg font-semibold\">{editingProduct ? 'Edit Product' : 'Product List'}</h2>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"text-gray-500 hover:text-gray-700 text-xl leading-none\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block font-medium mb-1 text-sm\">Product Name*</label>\r\n            <select\r\n              value={selectedProductId}\r\n              onChange={(e) => handleProductSelect(e.target.value)}\r\n              className=\"w-full border border-gray-300 rounded-md p-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              required\r\n            >\r\n              <option value=\"\">-- Select Product --</option>\r\n              {products.map((product) => (\r\n                <option key={product.crmtf_product_id} value={product.crmtf_product_id}>\r\n                  {product.crmtf_product_name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n            <div>\r\n              <label className=\"block font-medium mb-1 text-sm\">Code</label>\r\n              <input\r\n                type=\"text\"\r\n                value={selectedProduct?.crmtf_product_code || ''}\r\n                className=\"w-full border border-gray-300 rounded-md p-2 bg-gray-100 text-sm\"\r\n                disabled\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium mb-1 text-sm\">Type</label>\r\n              <input\r\n                type=\"text\"\r\n                value={selectedProduct?.crmtf_product_type || ''}\r\n                className=\"w-full border border-gray-300 rounded-md p-2 bg-gray-100 text-sm\"\r\n                disabled\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium mb-1 text-sm\">Model</label>\r\n              <input\r\n                type=\"text\"\r\n                value={selectedProduct?.crmtf_product_model_number || ''}\r\n                className=\"w-full border border-gray-300 rounded-md p-2 bg-gray-100 text-sm\"\r\n                disabled\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium mb-1 text-sm\">UOM</label>\r\n              <input\r\n                type=\"text\"\r\n                value={selectedProduct?.crmtf_product_uom || ''}\r\n                className=\"w-full border border-gray-300 rounded-md p-2 bg-gray-100 text-sm\"\r\n                disabled\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium mb-1 text-sm\">Quantity*</label>\r\n              <input\r\n                type=\"number\"\r\n                value={quantity}\r\n                onChange={e => setQuantity(parseInt(e.target.value) || 1)}\r\n                className=\"w-full border border-gray-300 rounded-md p-2 text-sm\"\r\n                min=\"1\"\r\n                required\r\n                placeholder=\"Quantity\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium mb-1 text-sm\">Price*</label>\r\n              <input\r\n                type=\"number\"\r\n                value={price}\r\n                onChange={e => setPrice(parseFloat(e.target.value) || 0)}\r\n                className=\"w-full border border-gray-300 rounded-md p-2 text-sm\"\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n                required\r\n                placeholder=\"Unit Price\"\r\n              />\r\n            </div>\r\n          </div>\r\n          {quantity > 0 && price > 0 && (\r\n            <div className=\"mt-2 text-sm text-blue-700 bg-blue-50 rounded p-2\">\r\n              Total: Rs {(quantity * price).toFixed(2)}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex gap-1 justify-end mt-4 pt-3\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleSave}\r\n            disabled={!selectedProduct || quantity <= 0 || price <= 0}\r\n            className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed text-white px-4 py-1.5 rounded text-sm\"\r\n          >\r\n            {editingProduct ? 'Update Product' : 'Add Product'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleClose}\r\n            className=\"bg-red-500 hover:bg-red-600 text-white px-4 py-1.5 rounded text-sm\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function LeadEditPage({ params }: Props) {\r\n  // Use React.use() to unwrap the params Promise\r\n  const { leadId } = use(params);\r\n  const router = useRouter();\r\nconst { employee, requireAuth } = useEmployeeSession();\r\n  // Add client-side flag to prevent hydration mismatch\r\n  const [isClient, setIsClient] = useState(false);\r\n  const [lead, setLead] = useState<Lead | null>(null);\r\n  const [employees, setEmployees] = useState<Employee[]>([]);\r\n  const [availableProducts, setAvailableProducts] = useState<AvailableProduct[]>([]);\r\n  const [enquiryProducts, setEnquiryProducts] = useState<EnquiryProduct[]>([]);\r\n  const [displayedProducts, setDisplayedProducts] = useState<EnquiryProduct[]>([]);\r\n  const [isProductModalOpen, setIsProductModalOpen] = useState(false);\r\n  const [editingProductIndex, setEditingProductIndex] = useState<number | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\nconst [deletedAttachmentIds, setDeletedAttachmentIds] = useState<number[]>([]);\r\n\r\n  const [formData, setFormData] = useState<FormDataType>({\r\n    crm_enquiry_number: '',\r\n    opportunityName: '',\r\n    contactName: '',\r\n    type: '',\r\n    leadSource: '',\r\n    assignedTo: '',\r\n    campaignSource: '',\r\n    weightedRevenue: '',\r\n    organizationName: '',\r\n    amount: '',\r\n    expectedCloseDate: '',\r\n    actualCloseDate: '',\r\n    hasActualCloseDate: false,\r\n    nextStep: '',\r\n    salesStage: '',\r\n    probability: '',\r\n    description: '',\r\n    attachments: [],\r\n    comment: '',\r\n  });\r\n\r\n  // Set client flag after mount to prevent hydration issues\r\n  useEffect(() => {\r\n    setIsClient(true);\r\n  }, []);\r\n\r\n  // Helper function to map API response to frontend Lead type\r\n  function mapLead(data: ApiLead): Lead {\r\n  const latestComment = data.comments\r\n    ?.sort((a, b) => new Date(b.commented_on).getTime() - new Date(a.commented_on).getTime())[0];\r\n\r\n  return {\r\n    leadId: data.crm_enquiry_id,\r\n    crm_enquiry_number: data.crm_enquiry_number,\r\n    opportunityName: data.crm_opportunity_name,\r\n    contactName: data.crm_contact_name,\r\n    type: data.crm_type,\r\n    leadSource: data.crm_lead_source,\r\n    assignedToName: data.assignedToName,\r\n    assignedTo: data.crm_assigned_to,\r\n    campaignSource: data.crm_campaign_source,\r\n    weightedRevenue: data.crm_weighted_revenue,\r\n    organizationName: data.crm_organization_name,\r\n    amount: data.crm_amount,\r\n    expectedCloseDate: data.crm_expected_close_date,\r\n    actualCloseDate: data.crm_close_date,\r\n    nextStep: data.crm_next_step,\r\n    salesStage: data.crm_sales_stage,\r\n    probability: data.crm_probability,\r\n    description: data.crm_description,\r\n    attachments: data.attachments,\r\n    comments: data.comments,\r\n    products: data.products,\r\n    employee: data.employee,\r\n\r\n    // 👇 Add this line to pre-fill the textarea\r\n   comment: latestComment?.comment_text || '', \r\n  };\r\n}\r\n\r\n\r\n  // Convert API products to EnquiryProduct format, enriching from availableProducts\r\n  function convertToEnquiryProducts(\r\n    products: Product[],\r\n    availableProducts: AvailableProduct[]\r\n  ): EnquiryProduct[] {\r\n    return products.map((product, index) => {\r\n      const match = availableProducts.find(\r\n        (p) => p.crmtf_product_id === product.crmtf_product_id\r\n      );\r\n      return {\r\n        id: `existing-${index}`,\r\n        crmtf_product_id: product.crmtf_product_id,\r\n        product_name: match?.crmtf_product_name || product.crmtf_product_name,\r\n        product_code: match?.crmtf_product_code || product.crmtf_product_code || '',\r\n        product_type: match?.crmtf_product_type || product.crmtf_product_type || '',\r\n        product_model_number:\r\n          match?.crmtf_product_model_number || product.crmtf_product_model_number || '',\r\n        product_uom: match?.crmtf_product_uom || product.crmtf_product_uom || '',\r\n        crm_quantity: product.crm_quantity || 0,\r\n        crm_price: product.crm_price || 0,\r\n        session_flag: null, // Initialize with null flag\r\n      };\r\n    });\r\n  }\r\n\r\n  // Get displayed products helper - filter out deleted products\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst getDisplayedProducts = (products: EnquiryProduct[]): EnquiryProduct[] => {\r\n  return products.filter(product => product.session_flag !== 'D');\r\n};\r\n\r\n\r\n  // Debug function to log session data (you can call this from browser console)\r\n  const logSessionData = () => {\r\n  const sessionProducts = sessionStorage.getItem(`enquiryProducts_${leadId}`);\r\n  if (sessionProducts) {\r\n    const products: EnquiryProduct[] = JSON.parse(sessionProducts);\r\n    console.log('=== SESSION PRODUCT DATA ===');\r\n    console.log(`Total products in session: ${products.length}`);\r\n\r\n    const categorized = products.reduce((acc: Record<string, EnquiryProduct[]>, product: EnquiryProduct) => {\r\n      const flag = product.session_flag || 'null';\r\n      if (!acc[flag]) acc[flag] = [];\r\n      acc[flag].push(product);\r\n      return acc;\r\n    }, {});\r\n\r\n    Object.keys(categorized).forEach(flag => {\r\n      console.log(`${flag} products (${categorized[flag].length}):`, categorized[flag]);\r\n    });\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  if (lead) {\r\n    // Sort comments by date descending\r\n    const latestComment = lead.comments\r\n      ?.slice()\r\n      .sort((a, b) => new Date(b.commented_on).getTime() - new Date(a.commented_on).getTime())[0];\r\n\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      // Initialize comment field with latest comment text\r\n      comment: latestComment?.comment_text || '',  // or comment_text depending on your data\r\n      // Initialize other form fields from lead if needed\r\n    }));\r\n  }\r\n}, [lead]);\r\n  // Make logSessionData available globally for debugging\r\nuseEffect(() => {\r\n  if (typeof window !== 'undefined') {\r\n    window.logSessionData = logSessionData;\r\n  }\r\n});\r\n\r\n  // Fetch lead and support data - only run on client\r\n  useEffect(() => {\r\n    if (!isClient) return;\r\n\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        // Check if data exists in session storage first\r\n        const cachedProducts = sessionStorage.getItem('availableProducts');\r\n        const cachedEmployees = sessionStorage.getItem('employees');\r\n        const cachedLeadData = sessionStorage.getItem(`leadData_${leadId}`);\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst cachedEnquiryProducts = sessionStorage.getItem(`enquiryProducts_${leadId}`);\r\n\r\n        \r\n        let loadedAvailableProducts: AvailableProduct[] = [];\r\n        let loadedEmployees: Employee[] = [];\r\n        \r\n        // Use cached data or fetch new data for products and employees\r\n        if (cachedProducts && cachedEmployees) {\r\n          loadedAvailableProducts = JSON.parse(cachedProducts);\r\n          loadedEmployees = JSON.parse(cachedEmployees);\r\n          setAvailableProducts(loadedAvailableProducts);\r\n          setEmployees(loadedEmployees);\r\n        } else {\r\n          // Always fetch fresh data\r\n          const [productsRes, employeesRes] = await Promise.all([\r\n            fetch('/api/products'),\r\n            fetch('/api/employees'),\r\n          ]);\r\n\r\n          if (productsRes.ok) {\r\n            loadedAvailableProducts = await productsRes.json();\r\n            sessionStorage.setItem('availableProducts', JSON.stringify(loadedAvailableProducts));\r\n          }\r\n          setAvailableProducts(loadedAvailableProducts);\r\n\r\n          if (employeesRes.ok) {\r\n            loadedEmployees = await employeesRes.json();\r\n            sessionStorage.setItem('employees', JSON.stringify(loadedEmployees));\r\n          }\r\n          setEmployees(loadedEmployees);\r\n\r\n        }\r\n\r\n        // Handle lead data - use cached if available\r\n        let leadData: ApiLead;\r\n        if (cachedLeadData) {\r\n          leadData = JSON.parse(cachedLeadData);\r\n          console.log(\"Using cached lead data:\", leadData);\r\n        } else {\r\n          console.log(\"Frontend calling API with leadId:\", leadId);\r\n          // Always fetch lead data\r\n          const leadRes = await fetch(`/api/leads/${leadId}/edit_old`);\r\n          if (!leadRes.ok) {\r\n            const errorData = await leadRes.json();\r\n            throw new Error(errorData.message || 'Lead not found.');\r\n          }\r\n          leadData = await leadRes.json();\r\n          sessionStorage.setItem(`leadData_${leadId}/edit_old`, JSON.stringify(leadData));\r\n        }\r\n        \r\n        const mappedLead = mapLead(leadData);\r\n        setLead(mappedLead);\r\n\r\n        // Create new formData object\r\n        const newFormData = {\r\n          crm_enquiry_number: mappedLead.crm_enquiry_number || '',\r\n          opportunityName: mappedLead.opportunityName || '',\r\n          contactName: mappedLead.contactName || '',\r\n          type: mappedLead.type || '',\r\n          leadSource: mappedLead.leadSource || '',\r\n          assignedTo: mappedLead.assignedTo?.toString() || '',\r\n          campaignSource: mappedLead.campaignSource || '',\r\n          weightedRevenue: mappedLead.weightedRevenue?.toString() || '',\r\n          organizationName: mappedLead.organizationName || '',\r\n          amount: mappedLead.amount?.toString() || '',\r\n          expectedCloseDate: mappedLead.expectedCloseDate\r\n            ? mappedLead.expectedCloseDate.split('T')[0]\r\n            : '',\r\n          actualCloseDate: mappedLead.actualCloseDate \r\n            ? mappedLead.actualCloseDate.split('T')[0] \r\n            : '',\r\n          hasActualCloseDate: !!mappedLead.actualCloseDate,\r\n          nextStep: mappedLead.nextStep || '',\r\n          salesStage: mappedLead.salesStage || '',\r\n          probability: mappedLead.probability?.toString() || '',\r\n          description: mappedLead.description || '',\r\n          attachments: [],\r\n          comment: '',\r\n        };\r\n        \r\n        setFormData(newFormData);\r\n\r\n        // Handle enquiry products - prioritize session data over API data\r\n        let finalEnquiryProducts: EnquiryProduct[] = [];\r\n        \r\n        if (mappedLead.products) {\r\n          finalEnquiryProducts = convertToEnquiryProducts(mappedLead.products, loadedAvailableProducts);\r\n          sessionStorage.setItem(`enquiryProducts_${leadId}`, JSON.stringify(finalEnquiryProducts));\r\n        }\r\n\r\n        \r\n        setEnquiryProducts(finalEnquiryProducts);\r\n        // Filter out deleted products for display (session_flag !== 'D')\r\n        const filteredProducts = finalEnquiryProducts.filter(product => product.session_flag !== 'D');\r\n        setDisplayedProducts(filteredProducts);\r\n        console.log(`Displaying ${filteredProducts.length} products (filtered out deleted)`);\r\n\r\n      } catch (err) {\r\n        setError((err as Error).message || 'An unexpected error occurred while loading data.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    \r\n    fetchData();\r\n  }, [leadId, isClient]); // Depend on both leadId and isClient\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   if (e.target.files) {\r\n  //     setFormData({ ...formData, attachments: Array.from(e.target.files) });\r\n  //   }\r\n  // };\r\n// Move these handler functions OUTSIDE of the ProductModal component\r\n// and place them in the main LeadEditPage component, after the state declarations\r\n\r\n// Handler for deleting existing attachments\r\n// Updated handler for deleting existing attachments\r\n// Add this enhanced debugging to your handleDeleteExistingAttachment function\r\n\r\n// Enhanced handleDeleteExistingAttachment with better debugging\r\nconst handleDeleteExistingAttachment = (indexToRemove: number) => {\r\n  console.log('🗑️ === STARTING ATTACHMENT DELETION ===');\r\n  console.log('Index to remove:', indexToRemove);\r\n  console.log('Current attachments:', lead?.attachments);\r\n  console.log('Current deletedAttachmentIds before:', deletedAttachmentIds);\r\n\r\n  if (lead?.attachments) {\r\n    const attachmentToDelete = lead.attachments[indexToRemove];\r\n    console.log('Attachment to delete:', attachmentToDelete);\r\n    \r\n    // Only add to deleted list if it has an ID (exists in database)\r\n    if (attachmentToDelete.crm_attachment_id) {\r\n      console.log('✅ Adding to deletion list:', attachmentToDelete.crm_attachment_id);\r\n      \r\n      // Update the deletedAttachmentIds state\r\n      setDeletedAttachmentIds(prev => {\r\n        const newList = [...prev, attachmentToDelete.crm_attachment_id!];\r\n        console.log('📝 Updated deletion list:', newList);\r\n        return newList;\r\n      });\r\n      \r\n      console.log('✅ Marked attachment for deletion:', {\r\n        id: attachmentToDelete.crm_attachment_id,\r\n        name: attachmentToDelete.file_name\r\n      });\r\n    } else {\r\n      console.warn('⚠️ Attachment has no crm_attachment_id, cannot mark for deletion:', attachmentToDelete);\r\n    }\r\n    \r\n    // Remove from display immediately\r\n    const updatedAttachments = lead.attachments.filter((_, index) => index !== indexToRemove);\r\n    console.log('📋 Updated attachments list (for display):', updatedAttachments);\r\n    \r\n    setLead(prev => {\r\n      if (!prev) return null;\r\n      const newLead = {\r\n        ...prev,\r\n        attachments: updatedAttachments\r\n      };\r\n      console.log('💾 Updated lead state with new attachments');\r\n      return newLead;\r\n    });\r\n    \r\n    console.log('✅ Attachment removal from UI completed');\r\n  } else {\r\n    console.warn('⚠️ No attachments found in lead object');\r\n  }\r\n  \r\n  console.log('🗑️ === ATTACHMENT DELETION FINISHED ===');\r\n  \r\n  // Add a small delay to check the state update\r\n  setTimeout(() => {\r\n    console.log('🔍 Checking state after 100ms:');\r\n    console.log('deletedAttachmentIds after state update:', deletedAttachmentIds);\r\n  }, 100);\r\n};\r\n// Handler for deleting new attachments (before upload)\r\nconst handleDeleteNewAttachment = (indexToRemove: number) => {\r\n  setFormData(prev => ({\r\n    ...prev,\r\n    attachments: prev.attachments.filter((_, index) => index !== indexToRemove)\r\n  }));\r\n};\r\n\r\n// Update the existing handleFileChange function\r\nconst handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n  if (e.target.files) {\r\n    const fileArray = Array.from(e.target.files);\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      attachments: [...prev.attachments, ...fileArray]\r\n    }));\r\n  }\r\n};\r\n\r\n  const handleAddProduct = () => {\r\n    setEditingProductIndex(null);\r\n    setIsProductModalOpen(true);\r\n  };\r\n\r\n  const handleEditProduct = (displayIndex: number) => {\r\n    const productToEdit = displayedProducts[displayIndex];\r\n    const actualIndex = enquiryProducts.findIndex(p => p.id === productToEdit.id);\r\n    setEditingProductIndex(actualIndex);\r\n    setIsProductModalOpen(true);\r\n  };\r\n\r\nconst handleSaveProduct = (product: EnquiryProduct) => {\r\n  // const leadId = router.query.leadId; // ✅ Add this line to fix the error\r\n\r\n  let updatedProducts;\r\n  if (editingProductIndex !== null) {\r\n    // Editing existing product\r\n    updatedProducts = [...enquiryProducts];\r\n    updatedProducts[editingProductIndex] = {\r\n      ...product,\r\n      session_flag: updatedProducts[editingProductIndex].session_flag === null ? 'E' : updatedProducts[editingProductIndex].session_flag\r\n    };\r\n  } else {\r\n    // Adding new product\r\n    const newProduct = {\r\n      ...product,\r\n      session_flag: 'A' as const\r\n    };\r\n    updatedProducts = [...enquiryProducts, newProduct];\r\n  }\r\n\r\n  setEnquiryProducts(updatedProducts);\r\n\r\n  // Filter and set displayed products (exclude deleted ones)\r\n  const filteredProducts = updatedProducts.filter(p => p.session_flag !== 'D');\r\n  setDisplayedProducts(filteredProducts);\r\n  console.log('💾 Saving product:', product);\r\n  console.log('🛠️ Editing index:', editingProductIndex);\r\n  console.log('📋 Updated product list:', updatedProducts);\r\n  console.log('🧮 Displayed products count:', filteredProducts.length);\r\n\r\n  // Update session storage\r\n  sessionStorage.setItem(`enquiryProducts_${leadId}`, JSON.stringify(updatedProducts));\r\n  sessionStorage.setItem(`enquiryProducts_lastUpdated_${leadId}`, new Date().toISOString());\r\n  console.log(`Updated session: ${updatedProducts.length} total products, ${filteredProducts.length} displayed`);\r\n};\r\n\r\n  const handleProductChange = (\r\n    index: number,\r\n    field: 'crm_quantity' | 'crm_price',\r\n    value: number\r\n  ) => {\r\n    const actualIndex = enquiryProducts.findIndex(p => p.id === displayedProducts[index].id);\r\n    const updatedProducts = [...enquiryProducts];\r\n    updatedProducts[actualIndex] = {\r\n      ...updatedProducts[actualIndex],\r\n      [field]: value,\r\n      session_flag: updatedProducts[actualIndex].session_flag === null ? 'E' : updatedProducts[actualIndex].session_flag\r\n    };\r\n    setEnquiryProducts(updatedProducts);\r\n    console.log(`✏️ Changing product [${index}] field \"${field}\" to`, value);\r\nconsole.log('📦 Updated product object:', updatedProducts[actualIndex]);\r\n\r\n    // Filter and set displayed products (exclude deleted ones)\r\n    const filteredProducts = updatedProducts.filter(p => p.session_flag !== 'D');\r\n    setDisplayedProducts(filteredProducts);\r\n    \r\n    // Update session storage\r\n    sessionStorage.setItem(`enquiryProducts_${leadId}`, JSON.stringify(updatedProducts));\r\n    sessionStorage.setItem(`enquiryProducts_lastUpdated_${leadId}`, new Date().toISOString());\r\n  };\r\n\r\n  const handleRemoveProduct = (id: string) => {\r\n    const updatedProducts = enquiryProducts.map(product => \r\n      product.id === id \r\n        ? { ...product, session_flag: 'D' as const }\r\n        : product\r\n    );\r\n    setEnquiryProducts(updatedProducts);\r\n    \r\n    // Filter and set displayed products (exclude deleted ones)\r\n    const filteredProducts = updatedProducts.filter(p => p.session_flag !== 'D');\r\n    setDisplayedProducts(filteredProducts);\r\n    \r\n    // Update session storage\r\n    sessionStorage.setItem(`enquiryProducts_${leadId}`, JSON.stringify(updatedProducts));\r\n    sessionStorage.setItem(`enquiryProducts_lastUpdated_${leadId}`, new Date().toISOString());\r\n    console.log(`Marked product ${id} as deleted. ${filteredProducts.length} products remaining`);\r\n  };\r\n    useEffect(() => {\r\n    if (!requireAuth()) return;\r\n    setIsClient(true);\r\n  }, [requireAuth]);\r\n\r\n  // Fixed handleSubmit function in your LeadEditPage component\r\n// Complete fixed handleSubmit function - remove the old payload declaration completely\r\nconst handleSubmit = async (e: React.FormEvent) => {\r\n  e.preventDefault();\r\n  setSaving(true);\r\n  setError(null);\r\n\r\n  // Debug: Log session data BEFORE starting submission\r\n  console.log('=== BEFORE SUBMISSION ===');\r\n  console.log('Current enquiryProducts state:', enquiryProducts);\r\n  console.log('Deleted attachment IDs:', deletedAttachmentIds);\r\n\r\n  // Declare variables outside try block to fix scope issues\r\n  let productsToAdd: EnquiryProduct[] = [];\r\n  let productsToEdit: EnquiryProduct[] = [];\r\n  let productsToDelete: EnquiryProduct[] = [];\r\n  let unchangedProducts: EnquiryProduct[] = [];\r\n\r\n  try {\r\n    // Create FormData payload\r\n    const payload = new FormData();\r\n\r\n    // Add form fields to payload\r\n    Object.entries(formData).forEach(([key, value]) => {\r\n      if (key !== 'attachments') {\r\n        // Handle actualCloseDate based on checkbox state\r\n        if (key === 'actualCloseDate') {\r\n          if (formData.hasActualCloseDate && \r\n              typeof value === 'string' && \r\n              value.trim() !== '') {\r\n            payload.append(key, value);\r\n          } else {\r\n            // FIXED: Always append the field, but with empty string when disabled\r\n            payload.append(key, '');  // Backend will convert empty string to null\r\n          }\r\n        } else if (key !== 'hasActualCloseDate') {\r\n          payload.append(key, value as string);\r\n        }\r\n      }\r\n    });\r\n if (employee?.employee_id) {\r\n        payload.append('modified_by', employee.employee_id.toString());\r\n      }\r\n    // Add new file attachments\r\n    formData.attachments.forEach((file) => {\r\n      payload.append('attachments', file);\r\n    });\r\n\r\n    // Add deleted attachment IDs to payload\r\n    if (deletedAttachmentIds.length > 0) {\r\n      payload.append('deletedAttachmentIds', JSON.stringify(deletedAttachmentIds));\r\n      console.log('Sending deleted attachment IDs:', deletedAttachmentIds);\r\n    }\r\n\r\n    // Process products based on session_flag\r\n    const sessionProducts: EnquiryProduct[] = enquiryProducts;\r\n\r\n    // Separate products by their session_flag\r\n    productsToAdd = sessionProducts.filter((p: EnquiryProduct) => p.session_flag === 'A');\r\n    productsToEdit = sessionProducts.filter((p: EnquiryProduct) => p.session_flag === 'E');\r\n    productsToDelete = sessionProducts.filter((p: EnquiryProduct) => p.session_flag === 'D');\r\n    unchangedProducts = sessionProducts.filter((p: EnquiryProduct) => p.session_flag === null);\r\n\r\n    // Create the payload for different operations\r\n    const productOperations = {\r\n      add: productsToAdd,\r\n      edit: productsToEdit,\r\n      delete: productsToDelete,\r\n      unchanged: unchangedProducts\r\n    };\r\n\r\n    console.log('Product operations to send:', {\r\n      toAdd: productsToAdd.length,\r\n      toEdit: productsToEdit.length,\r\n      toDelete: productsToDelete.length,\r\n      unchanged: unchangedProducts.length\r\n    });\r\n\r\n    payload.append('productOperations', JSON.stringify(productOperations));\r\n\r\n    // Debug payload contents\r\n    console.log('=== FINAL PAYLOAD CHECK ===');\r\n    for (const [key, value] of payload.entries()) {\r\n      if (key === 'deletedAttachmentIds') {\r\n        console.log(`${key}:`, value);\r\n      }\r\n    }\r\n\r\n    console.log('Making API call to:', `/api/leads/${leadId}/edit_old`);\r\n    const response = await fetch(`/api/leads/${leadId}/edit_old`, {\r\n      method: 'PUT',\r\n      body: payload,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      console.log('API Error:', errorData);\r\n      alert(`Failed to update lead: ${errorData.error}`);\r\n      return;\r\n    }\r\n\r\n    console.log('Processing response data...');\r\n    const responseData = await response.json();\r\n    console.log('Update response:', responseData);\r\n\r\n    // Show success message\r\n    alert('Lead updated successfully!');\r\n\r\n    // Clear session storage only after confirmed success\r\n    try {\r\n      sessionStorage.removeItem(`enquiryProducts_${leadId}`);\r\n      sessionStorage.removeItem(`enquiryProducts_lastUpdated_${leadId}`);\r\n      sessionStorage.removeItem(`leadData_${leadId}`);\r\n      console.log('✅ Session storage cleared successfully');\r\n    } catch (storageError) {\r\n      console.warn('❌ Error clearing session storage:', storageError);\r\n    }\r\n\r\n    // Navigate back to lead details\r\n    setTimeout(() => {\r\n      router.push(`/leads/${leadId}`);\r\n    }, 100);\r\n\r\n  } catch (error) {\r\n    console.error('❌ SUBMIT ERROR:', error);\r\n    setError('An error occurred while updating the lead. Your changes have been preserved.');\r\n    alert('An error occurred while updating the lead. Please try again.');\r\n  } finally {\r\n    setSaving(false);\r\n  }\r\n};\r\n\r\n  const handleCancel = () => {\r\n    router.push(`/leads/${leadId}`);\r\n  };\r\n\r\n  // Show loading state while client is initializing or data is loading\r\n  if (!isClient || loading) {\r\n    return <div className=\"p-8 text-center text-lg\">Loading lead details...</div>;\r\n  }\r\n\r\n  if (error) return <div className=\"p-8 text-center text-red-600 text-lg\">Error: {error}</div>;\r\n  if (!lead) return <div className=\"p-8 text-center text-gray-600 text-lg\">Lead not found.</div>;\r\n\r\n  return (\r\n    <div className=\"mt-2\">\r\n      {/* Breadcrumb */}\r\n      <div className=\"mb-2 ml-4\">\r\n        <div className=\"text-sm\">\r\n          <Link href=\"/leads/leadlist\" className=\"text-blue-600 hover:underline\">\r\n            All\r\n          </Link>\r\n          \r\n          <span className=\"mx-2 text-gray-500\">→</span>\r\n          <span className=\"text-gray-700\">Edit</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto text-sm\">\r\n        <div className=\"flex justify-between items-center mb-3\">\r\n          <h1 className=\"text-2xl font-bold\">Edit Enquiry: {lead.opportunityName}</h1>\r\n          <button\r\n            type=\"button\"\r\n            className=\"bg-gray-600 hover:bg-gray-700 text-white px-3 py-1 rounded text-sm\"\r\n            onClick={() => router.push(`/leads/leadlist`)}\r\n          >\r\n            Back to List\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\" encType=\"multipart/form-data\">\r\n         <div className=\"flex gap-4\">\r\n          <InlineField label=\"Enquiry Number\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"crm_enquiry_number\"\r\n              value={formData.crm_enquiry_number}\r\n              readOnly\r\n              className=\"w-full border rounded p-1 min-w-0 text-sm bg-gray-100 cursor-not-allowed\"\r\n            />\r\n          </InlineField>\r\n            <InlineField label=\"Enquiry Name\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"opportunityName\"\r\n                value={formData.opportunityName}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\"\r\n                required\r\n              />\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Contact Name\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"contactName\"\r\n                value={formData.contactName}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\"\r\n                required\r\n              />\r\n            </InlineField>\r\n          </div>\r\n\r\n          {/* Row 2 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Type\">\r\n              <select\r\n                name=\"type\"\r\n                value={formData.type}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              >\r\n                <option value=\"\">-- Select Type --</option>\r\n                <option value=\"New Business\">New Business</option>\r\n                <option value=\"Existing Business\">Existing Business</option>\r\n              </select>\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Lead Source\">\r\n              <select\r\n                name=\"leadSource\"\r\n                value={formData.leadSource}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              >\r\n                <option value=\"\">-- Select Source --</option>\r\n                <option value=\"Cold Call\">Cold Call</option>\r\n                <option value=\"Existing Customer\">Existing Customer</option>\r\n                <option value=\"Self Generated\">Self Generated</option>\r\n                <option value=\"Employee\">Employee</option>\r\n                <option value=\"Partner\">Partner</option>\r\n                <option value=\"Public Relations\">Public Relations</option>\r\n                <option value=\"Direct Mail\">Direct Mail</option>\r\n                <option value=\"Conference\">Conference</option>\r\n                <option value=\"Trade Show\">Trade Show</option>\r\n                <option value=\"Web Site\">Web Site</option>\r\n                <option value=\"Word Of Mouth\">Word Of Mouth</option>\r\n                <option value=\"Other\">Other</option>\r\n              </select>\r\n            </InlineField>\r\n          </div>\r\n\r\n          {/* Row 3 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Assigned To\">\r\n              <select\r\n                name=\"assignedTo\"\r\n                value={formData.assignedTo}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              >\r\n                <option value=\"\">-- Select Employee --</option>\r\n                {employees.map(emp => (\r\n                  <option key={emp.employee_id} value={emp.employee_id}>\r\n                    {emp.employee_first_name} {emp.employee_last_name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Campaign Source\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"campaignSource\"\r\n                value={formData.campaignSource}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              />\r\n            </InlineField>\r\n          </div>\r\n\r\n          {/* Row 4 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Weighted Revenue\">\r\n              <input\r\n                type=\"number\"\r\n                name=\"weightedRevenue\"\r\n                value={formData.weightedRevenue}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              />\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Organization Name\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"organizationName\"\r\n                value={formData.organizationName}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              />\r\n            </InlineField>\r\n          </div>\r\n\r\n          {/* Row 5 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Amount\">\r\n              <input\r\n                type=\"number\"\r\n                name=\"amount\"\r\n                value={formData.amount}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              />\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Expected Close Date\">\r\n              <input\r\n                type=\"date\"\r\n                name=\"expectedCloseDate\"\r\n                value={formData.expectedCloseDate}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              />\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Actual Close Date\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"hasActualCloseDate\"\r\n                  checked={formData.hasActualCloseDate}\r\n                  onChange={(e) =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      hasActualCloseDate: e.target.checked,\r\n                      actualCloseDate: e.target.checked ? prev.actualCloseDate : '',\r\n                    }))\r\n                  }\r\n                  className=\"rounded\"\r\n                />\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"actualCloseDate\"\r\n                  value={formData.actualCloseDate}\r\n                  onChange={handleChange}\r\n                  disabled={!formData.hasActualCloseDate}\r\n                  className={`flex-1 border rounded p-1 min-w-0 text-sm ${\r\n                    !formData.hasActualCloseDate \r\n                      ? 'bg-gray-100 cursor-not-allowed text-gray-400' \r\n                      : ''\r\n                  }`}\r\n                />\r\n              </div>\r\n            </InlineField>\r\n          </div>\r\n\r\n          {/* Row 6 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Next Step\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"nextStep\"\r\n                value={formData.nextStep}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              />\r\n            </InlineField>\r\n\r\n            <InlineField label=\"Sales Stage\">\r\n              <select\r\n                name=\"salesStage\"\r\n                value={formData.salesStage}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n              >\r\n                <option value=\"\">-- Select Stage --</option>\r\n                <option value=\"Prospecting\">Prospecting</option>\r\n                <option value=\"Qualification\">Qualification</option>\r\n                <option value=\"Needs Analysis\">Needs Analysis</option>\r\n                <option value=\"Proposal\">Proposal or Price Quote</option>\r\n                <option value=\"Revised Quote\">Revised Quote</option>\r\n                <option value=\"Sales Order\">Sales Order(Client Purchase)</option>\r\n                <option value=\"Invoice\">Invoice</option>\r\n                <option value=\"Payment Due\">Payment Due</option>\r\n                <option value=\"Closed Won\">Closed Won</option>\r\n                <option value=\"Closed Lost\">Closed Lost</option>\r\n              </select>\r\n            </InlineField>\r\n          </div>\r\n\r\n          {/* Row 7 */}\r\n          <div className=\"flex gap-4\">\r\n            <InlineField label=\"Probability (%)\">\r\n              <input\r\n                type=\"number\"\r\n                name=\"probability\"\r\n                value={formData.probability}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-1 min-w-0 text-sm\" required\r\n                min=\"0\"\r\n                max=\"100\"\r\n              />\r\n            </InlineField>\r\n            <div className=\"flex-1\"></div>\r\n          </div>\r\n\r\n          {/* Full width: Description */}\r\n          <div className=\"flex gap-4\">\r\n            <label className=\"block font-medium mb-1\">Description</label>\r\n            <textarea\r\n              name=\"description\"\r\n              value={formData.description}\r\n              onChange={handleChange}\r\n              className=\"w-full border rounded p-1 h-20 resize-none\"\r\n              placeholder=\"Enter additional details about the lead...\" required\r\n            />\r\n\r\n            <label className=\"block font-medium\">Comments</label>\r\n            <textarea\r\n  name=\"comment\"\r\n  value={formData.comment}\r\n  onChange={handleChange}\r\n  className=\"w-full border rounded p-1 h-20 resize-none\"\r\n  required\r\n  placeholder=\"Enter your comment...\"\r\n/>\r\n\r\n          </div>\r\n\r\n          \r\n          <div className=\"mb-4\">\r\n            <label className=\"block font-medium mb-1\">Add Attachments</label>\r\n\r\n            {/* File Input */}\r\n            <input\r\n              type=\"file\"\r\n              multiple\r\n              onChange={handleFileChange}\r\n              className=\"border rounded p-1 text-sm w-full\"\r\n            />\r\n\r\n            {/* Existing Attachments */}\r\n            {lead.attachments && lead.attachments.length > 0 && (\r\n              <ul className=\"text-sm text-gray-700 space-y-1 mt-2\">\r\n                {lead.attachments.map((attachment, idx) => (\r\n                  <li key={`existing-${idx}`} className=\"flex items-center justify-between border p-2 rounded\">\r\n                    <a\r\n                      href={attachment.file_path}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"text-blue-600 hover:underline\"\r\n                    >\r\n                      {attachment.file_name}\r\n                    </a>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Are you sure you want to remove this attachment?\")) {\r\n                          handleDeleteExistingAttachment(idx);\r\n                        }\r\n                      }}\r\n                      className=\"bg-red-500 text-white p-1 rounded hover:bg-red-600\"\r\n                      title=\"Remove\"\r\n                    >\r\n                      <Trash2 size={16} />\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n\r\n            {/* New Attachments */}\r\n            {formData.attachments.length > 0 && (\r\n              <ul className=\"text-sm text-gray-700 space-y-1 mt-2\">\r\n                {formData.attachments.map((file, idx) => (\r\n                  <li key={`new-${idx}`} className=\"flex items-center justify-between border p-2 rounded\">\r\n                    {file.name}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Are you sure you want to remove this new file?\")) {\r\n                          handleDeleteNewAttachment(idx);\r\n                        }\r\n                      }}\r\n                      className=\"bg-red-500 text-white p-1 rounded hover:bg-red-600\"\r\n                      title=\"Remove\"\r\n                    >\r\n                      <Trash2 size={16} />\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n         \r\n          \r\n          {/* Add Product Button */}\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleAddProduct}\r\n              className=\"bg-green-600 text-white px-2 py-2 rounded hover:bg-green-700 text-sm\"\r\n            >\r\n              + Add Product\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Products Table */}\r\n          <div className=\"mt-4\">\r\n            <h3 className=\"font-medium mb-2\">Product List</h3>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full border-collapse border border-gray-300 text-sm\">\r\n                <thead>\r\n                  <tr className=\"bg-gray-100\">\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Product Name</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Code</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Type</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Model</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">UOM</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Quantity</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Price</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Total</th>\r\n                    <th className=\"border border-gray-300 p-2 text-left\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {displayedProducts.length === 0 ? (\r\n                    <tr>\r\n                      <td colSpan={9} className=\"border border-gray-300 p-2 text-center text-gray-500\">\r\n                        No products added yet.\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    displayedProducts.map((product, index) => {\r\n                      // fallback enrichment per row\r\n                      const baseProduct = availableProducts.find(\r\n                        p => p.crmtf_product_id === product.crmtf_product_id\r\n                      );\r\n                      return (\r\n                        <tr key={product.id}>\r\n                          <td className=\"border border-gray-300 p-2\">\r\n                            {product.product_name || baseProduct?.crmtf_product_name || ''}\r\n                          </td>\r\n                          <td className=\"border border-gray-300 p-2\">\r\n                            {product.product_code || baseProduct?.crmtf_product_code || ''}\r\n                          </td>\r\n                          <td className=\"border border-gray-300 p-2\">\r\n                            {product.product_type || baseProduct?.crmtf_product_type || ''}\r\n                          </td>\r\n                          <td className=\"border border-gray-300 p-2\">\r\n                            {product.product_model_number || baseProduct?.crmtf_product_model_number || ''}\r\n                          </td>\r\n                          <td className=\"border border-gray-300 p-2\">\r\n                            {product.product_uom || baseProduct?.crmtf_product_uom || ''}\r\n                          </td>\r\n                          <td className=\"border border-gray-300 p-2\">\r\n                            <input\r\n                              type=\"number\"\r\n                              value={product.crm_quantity ?? ''}\r\n                              min=\"0\"\r\n                              onChange={e =>\r\n                                handleProductChange(\r\n                                  index,\r\n                                  'crm_quantity',\r\n                                  parseInt(e.target.value, 10) || 0\r\n                                )\r\n                              }\r\n                              className=\"w-20 border rounded p-1 text-sm\"\r\n                            />\r\n                          </td>\r\n                          <td className=\"border border-gray-300 p-2\">\r\n                            <input\r\n                              type=\"number\"\r\n                              step=\"0.01\"\r\n                              value={product.crm_price ?? ''}\r\n                              onChange={e =>\r\n                                handleProductChange(\r\n                                  index,\r\n                                  'crm_price',\r\n                                  parseFloat(e.target.value) || 0\r\n                                )\r\n                              }\r\n                              className=\"w-24 border rounded p-1 text-sm\"\r\n                            />\r\n                          </td>\r\n                          <td className=\"border border-gray-300 p-2 text-right font-medium\">\r\n                            Rs {(product.crm_quantity * product.crm_price).toFixed(2)}\r\n                          </td>\r\n                          <td className=\"border border-gray-300 p-2 flex gap-2\">\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => handleEditProduct(index)}\r\n                              className=\"flex items-center text-blue-600 hover:text-blue-800 text-sm font-medium px-2 py-1 rounded hover:bg-blue-50\"\r\n                              title=\"Edit\"\r\n                            >\r\n                              <PencilIcon className=\"h-4 w-4 mr-1\" />\r\n                            </button>\r\n                            <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              if (window.confirm(\"Are you sure you want to remove this product?\")) {\r\n                                handleRemoveProduct(product.id);\r\n                              }\r\n                            }}\r\n                            className=\"bg-red-500 text-white p-1 rounded hover:bg-red-600\"\r\n                            title=\"Remove\"\r\n                          >\r\n                            <Trash2 size={16} />\r\n                          </button>\r\n\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n           {/* Current Comments */}\r\n          {lead.comments && lead.comments.length > 0 && (\r\n            <div className=\"flex gap-4\">\r\n              <label className=\"block font-medium\">Previous Comments</label>\r\n              <div className=\"w-full space-y-2\">\r\n                {lead.comments.map((comment, idx) => (\r\n                  <div key={idx} className=\"border-l-4 border-blue-500 pl-3 py-1 bg-blue-50 rounded-r text-sm\">\r\n                    <p className=\"text-gray-800\">{comment.comment_text}</p>\r\n                    <p className=\"text-xs text-gray-600 mt-1\">\r\n                      — {comment.commented_by_name} on {new Date(comment.commented_on).toLocaleString()}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* Fixed Footer with Save and Cancel Buttons */}\r\n          <div className=\"fixed bottom-6 left-[240px] right-0 z-5\">\r\n            <div className=\"px-4 py-3\">\r\n              <div className=\"flex gap-2 justify-center max-w-5xl mx-auto\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={saving}\r\n                  className=\"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 transition text-sm font-medium disabled:bg-blue-400 disabled:cursor-not-allowed\"\r\n                >\r\n                  {saving ? 'Updating...' : 'Update'}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"bg-red-500 text-white px-6 py-2 rounded hover:bg-red-600 transition text-sm font-medium\"\r\n                  onClick={handleCancel}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      \r\n      {/* Product Modal */}\r\n      <ProductModal\r\n        isOpen={isProductModalOpen}\r\n        onClose={() => setIsProductModalOpen(false)}\r\n        onSave={handleSaveProduct}\r\n        products={availableProducts}\r\n        editingProduct={editingProductIndex !== null ? enquiryProducts[editingProductIndex] : null}\r\n      />\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}