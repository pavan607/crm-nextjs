{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Downloads/crm/app/login/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport default function LoginPage() {\r\n  const router = useRouter();\r\n  const [form, setForm] = useState({\r\n    employee_number: '',\r\n    employee_email: '',\r\n    employee_dob: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const res = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(form),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message || 'Login failed');\r\n\r\n      // Store employee data in sessionStorage\r\n      if (data.employee) {\r\n        sessionStorage.setItem('loggedInEmployee', JSON.stringify(data.employee));\r\n      }\r\n\r\n      router.push('/');\r\n    } catch (err: unknown) {\r\n      if (err instanceof Error) {\r\n        setError(err.message);\r\n      } else {\r\n        setError('Login failed');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container d-flex align-items-center justify-content-center min-vh-100 bg-light\">\r\n      <div className=\"card shadow-sm p-4\" style={{ maxWidth: '400px', width: '100%' }}>\r\n        <h2 className=\"text-center mb-4\">Employee Login</h2>\r\n\r\n        {error && (\r\n          <div className=\"alert alert-danger text-center py-2\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"employee_number\" className=\"form-label\">Employee Number</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"employee_number\"\r\n              id=\"employee_number\"\r\n              value={form.employee_number}\r\n              onChange={handleChange}\r\n              className=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"employee_email\" className=\"form-label\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"employee_email\"\r\n              id=\"employee_email\"\r\n              value={form.employee_email}\r\n              onChange={handleChange}\r\n              className=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"employee_dob\" className=\"form-label\">Date of Birth</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"employee_dob\"\r\n              id=\"employee_dob\"\r\n              value={form.employee_dob}\r\n              onChange={handleChange}\r\n              className=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-grid\">\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n              {loading ? 'Logging in...' : 'Login'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        <p className=\"text-center mt-3 text-muted\">\r\n          Donâ€™t have an account?{' '}\r\n          <a href=\"/employee/add\" className=\"text-decoration-none\">\r\n            Register here\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,iBAAiB;QACjB,gBAAgB;QAChB,cAAc;IAChB;IACA,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe,CAAC;QACpB,QAAQ;YAAE,GAAG,IAAI;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IACrD;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,cAAc;gBACpC,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;YAE7C,wCAAwC;YACxC,IAAI,KAAK,QAAQ,EAAE;gBACjB,eAAe,OAAO,CAAC,oBAAoB,KAAK,SAAS,CAAC,KAAK,QAAQ;YACzE;YAEA,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,KAAc;YACrB,IAAI,eAAe,OAAO;gBACxB,SAAS,IAAI,OAAO;YACtB,OAAO;gBACL,SAAS;YACX;QACF,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;YAAqB,OAAO;gBAAE,UAAU;gBAAS,OAAO;YAAO;;8BAC5E,6LAAC;oBAAG,WAAU;8BAAmB;;;;;;gBAEhC,uBACC,6LAAC;oBAAI,WAAU;oBAAsC,MAAK;8BACvD;;;;;;8BAIL,6LAAC;oBAAK,UAAU;;sCACd,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,SAAQ;oCAAkB,WAAU;8CAAa;;;;;;8CACxD,6LAAC;oCACC,MAAK;oCACL,MAAK;oCACL,IAAG;oCACH,OAAO,KAAK,eAAe;oCAC3B,UAAU;oCACV,WAAU;oCACV,QAAQ;;;;;;;;;;;;sCAIZ,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,SAAQ;oCAAiB,WAAU;8CAAa;;;;;;8CACvD,6LAAC;oCACC,MAAK;oCACL,MAAK;oCACL,IAAG;oCACH,OAAO,KAAK,cAAc;oCAC1B,UAAU;oCACV,WAAU;oCACV,QAAQ;;;;;;;;;;;;sCAIZ,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,SAAQ;oCAAe,WAAU;8CAAa;;;;;;8CACrD,6LAAC;oCACC,MAAK;oCACL,MAAK;oCACL,IAAG;oCACH,OAAO,KAAK,YAAY;oCACxB,UAAU;oCACV,WAAU;oCACV,QAAQ;;;;;;;;;;;;sCAIZ,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAO,MAAK;gCAAS,WAAU;gCAAkB,UAAU;0CACzD,UAAU,kBAAkB;;;;;;;;;;;;;;;;;8BAKnC,6LAAC;oBAAE,WAAU;;wBAA8B;wBAClB;sCACvB,6LAAC;4BAAE,MAAK;4BAAgB,WAAU;sCAAuB;;;;;;;;;;;;;;;;;;;;;;;AAOnE;GAjHwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}}]
}