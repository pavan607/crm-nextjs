{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Downloads/crm%20%282%29/crm/app/employee/list/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Link from 'next/link';\r\nimport DataTable from \"react-data-table-component\";\r\nimport { saveAs } from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport { FaFileExcel, FaFilePdf, FaPrint } from \"react-icons/fa\";\r\n\r\ntype Employee = {\r\n  employee_number: string;\r\n  employee_first_name: string;\r\n  employee_last_name: string;\r\n  employee_email: string;\r\n  employee_designation: string;\r\n  department_name: string;\r\n};\r\n\r\nexport default function EmployeeList() {\r\n  const [employees, setEmployees] = useState<Employee[]>([]);\r\n  const [filteredEmployees, setFilteredEmployees] = useState<Employee[]>([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      try {\r\n        const res = await fetch(\"/api/employee/list\");\r\n        if (!res.ok) throw new Error(\"Failed to fetch employees\");\r\n        const data = await res.json();\r\n        setEmployees(data.employees);\r\n        setFilteredEmployees(data.employees);\r\n      } catch (err) {\r\n        setError((err as Error).message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = employees.filter((emp) =>\r\n      `${emp.employee_first_name} ${emp.employee_last_name} ${emp.employee_email} ${emp.department_name}`\r\n        .toLowerCase()\r\n        .includes(search.toLowerCase())\r\n    );\r\n    setFilteredEmployees(filtered);\r\n  }, [search, employees]);\r\n\r\n  const exportToExcel = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(filteredEmployees);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Employees\");\r\n    const excelBuffer = XLSX.write(workbook, {\r\n      bookType: \"xlsx\",\r\n      type: \"array\",\r\n    });\r\n    const data = new Blob([excelBuffer], {\r\n      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n    });\r\n    saveAs(data, \"employee_list.xlsx\");\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    const doc = new jsPDF();\r\n    const tableColumn = [ \"Number\", \"First Name\", \"Last Name\", \"Email\", \"Designation\", \"Department\"];\r\n    const tableRows = filteredEmployees.map(emp => [\r\n      emp.employee_number,\r\n      emp.employee_first_name,\r\n      emp.employee_last_name,\r\n      emp.employee_email,\r\n      emp.employee_designation,\r\n      emp.department_name,\r\n    ]);\r\n\r\n    autoTable(doc, {\r\n      head: [tableColumn],\r\n      body: tableRows,\r\n      startY: 20,\r\n      styles: { fontSize: 8 },\r\n    });\r\n\r\n    doc.save(\"employee_list.pdf\");\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    const printWindow = window.open('', '_blank');\r\n    if (!printWindow) return;\r\n    const html = `\r\n      <html>\r\n        <head>\r\n          <title>Employee List</title>\r\n          <style>\r\n            table { width: 100%; border-collapse: collapse; }\r\n            th, td { border: 1px solid #ccc; padding: 6px; text-align: left; }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <h2>Employee List</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Number</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Email</th>\r\n                <th>Designation</th>\r\n                <th>Department</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              ${filteredEmployees\r\n                .map(\r\n                  (emp) => `\r\n                  <tr>\r\n                    <td>${emp.employee_number}</td>\r\n                    <td>${emp.employee_first_name}</td>\r\n                    <td>${emp.employee_last_name}</td>\r\n                    <td>${emp.employee_email}</td>\r\n                    <td>${emp.employee_designation}</td>\r\n                    <td>${emp.department_name}</td>\r\n                  </tr>\r\n                `\r\n                )\r\n                .join('')}\r\n            </tbody>\r\n          </table>\r\n        </body>\r\n      </html>\r\n    `;\r\n    printWindow.document.write(html);\r\n    printWindow.document.close();\r\n    printWindow.print();\r\n  };\r\n\r\n  const columns = [\r\n    { name: \"Number\", selector: (row: Employee) => row.employee_number, sortable: true },\r\n    { name: \"First Name\", selector: (row: Employee) => row.employee_first_name, sortable: true },\r\n    { name: \"Last Name\", selector: (row: Employee) => row.employee_last_name, sortable: true },\r\n    { name: \"Email\", selector: (row: Employee) => row.employee_email, sortable: true },\r\n    { name: \"Designation\", selector: (row: Employee) => row.employee_designation, sortable: true },\r\n    { name: \"Department\", selector: (row: Employee) => row.department_name, sortable: true },\r\n  ];\r\n\r\n  if (loading) return <p>Loading employees...</p>;\r\n  if (error) return <p className=\"text-red-600\">{error}</p>;\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto px-6 py-10\">\r\n      {/* Breadcrumb */}\r\n      <nav className=\"mb-4\" aria-label=\"Breadcrumb\">\r\n        <div className=\"flex items-center space-x-2 text-sm\">\r\n          <Link \r\n            href=\"/employee-list\"\r\n            className=\"text-blue-600 hover:text-blue-800 hover:underline font-medium transition-colors\"\r\n          >\r\n            All\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n      \r\n      <div className=\"flex justify-between items-center mb-4 flex-wrap gap-2\">\r\n        <h1 className=\"text-3xl font-bold\">Employee List</h1>\r\n        <div className=\"space-x-2 flex flex-wrap items-center\">\r\n          <a\r\n            href=\"/employee/add\"\r\n            className=\"bg-blue-600 hover:bg-indigo-700 text-white px-4 py-2 rounded\"\r\n          >\r\n            + Add\r\n          </a>\r\n          <button\r\n            onClick={exportToExcel}\r\n            className=\"bg-green-600 text-white px-2 py-1 rounded hover:bg-green-700 transition whitespace-nowrap flex items-center gap-2\"\r\n          >\r\n            <FaFileExcel size={18} />\r\n            Excel\r\n          </button>\r\n          <button\r\n            onClick={exportToPDF}\r\n            className=\"bg-red-600 text-white px-3 py-1 rounded hover:bg-red-700 transition whitespace-nowrap flex items-center gap-2\"\r\n          >\r\n            <FaFilePdf size={18} />\r\n            PDF\r\n          </button>\r\n          <button\r\n            onClick={handlePrint}\r\n            className=\"flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded\"\r\n          >\r\n            <FaPrint size={18} />\r\n            Print\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        className=\"mb-4 px-3 py-2 border rounded w-full max-w-md\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n\r\n      <DataTable\r\n        columns={columns}\r\n        data={filteredEmployees}\r\n        pagination\r\n        highlightOnHover\r\n        responsive\r\n        striped\r\n        dense\r\n        customStyles={{\r\n          rows: {\r\n            style: {\r\n              fontSize: '0.85rem',\r\n              minHeight: '36px',\r\n              paddingTop: '4px',\r\n              paddingBottom: '4px',\r\n            },\r\n          },\r\n          headCells: {\r\n            style: {\r\n              fontSize: '0.85rem',\r\n              fontWeight: '600',\r\n              paddingTop: '6px',\r\n              paddingBottom: '6px',\r\n            },\r\n          },\r\n          cells: {\r\n            style: {\r\n              fontSize: '0.85rem',\r\n              paddingTop: '6px',\r\n              paddingBottom: '6px',\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}